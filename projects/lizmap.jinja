{%- import "makina-states/projects/base.jinja" as base with context %}
{%- import "makina-states/services/db/postgresql.sls" as pgsql with context %}
   -
{%- set services = base.services %}
{%- set saltmac = base.saltmac %}
{%- set localsettings = base.localsettings %}

{%- macro lizmap_pkgs(common) %}
{% if common.full %}
{% endif %}

{% endmacro %}
{%- macro lizmap_app(common) %}
{{common.name}}-lizmapwebclient:
  mc_git.latest:
    - name: https://github.com/makinacorpus/lizmap-web-client.git
    - target: {{common.project_root}}/webapp
    - user: {{common.user}}
    - require:
      {% if common.full %}
      - pkg: {{common.name}}lizmap-prereq
      {% endif %}
      - mc_git: {{common.name}}-checkout-code

{%  set basedirs = [
  common.project_root+'/cache',
  common.project_root+'/ftp/template',
  common.project_root+'/ftp/template/qgis',
  ] %}
{% for user in common.data.users %}
{%  for n in [1, 2, 3, 4, 5] %}
{%    do basedirs.append(common.project_root + '/ftp/' + user +'/qgis/rep' + n)
{%  endor %}
{%    do basedirs.append(common.project_root + '/cache/' + user )
{% endor %}
{% for dir in basedirs %}
{{common.name}}-rootdir-{{dir}}:
  file.directory:
    - name: {{dir}}
    - user: {{common.user}}
    - group: www-data
    - mode: 770
    - makedirs: true
    - require_in:
      - mc_dummy: {{common.name}}-rootdir-dirs
{% endfor %}
{{common.name}}-rootdir-dirs:
  mc_dummy.dummy: []

{% for user in common.data.users %}
{{common.name}}-ftp-group-{{user}}:
  group.present:
    - name: {{user}}
{{common.name}}-ftp-user-{{user}}:
  user.present:
    - shell: /bin/ftponly
    - name: {{user}}
    - group: {{user}}
    - fullname: {{user}} user
    - gid_from_name: True
    - require:
      - mc_dummy: {{common.name}}-rootdir-dirs
      - group: {{common.name}}-ftp-group-{{user}}
{% endfor %}
{% endmacro %}

#
# Base system prerequisite
#
{%- macro lizmap_db(common) %}
{{- pgsql.postgresql_db(common.data.db,name, template='postgis') }}
{{- pgsql.postgresql_user(group=common.db.name+'_owners',
  password=common.db.password,
  template='postgis') }}
{%- endmacro %}

#
# Cron from generic: pack & backup & restart each day, fullbackup per week (sunday)
#
{%- macro generic_crons(common) %}
{%- set cron_hour   = common.data.get('cron_hour', 1) %}
{%- set cron_minute = common.data.get('cron_minute', 0) %}

{#
{{common.name}}-zopepackdaily:
  cron.present:
    - comment: "{{common.name}}/project [zopepackdaily]"
    - user: {{common.user}}
    - minute:  {{ cron_minute + 0 }}
    - hour: {{cron_hour}}
    - name: {{common.project_root}}/bin/zeoserver-zeopack
    - require:
      - service: {{common.name}}-service
#}

{%- endmacro %}


#
# Data dictionnaries that feed the "common.data" dictionnary
# This is one of the most difficult part to understand, idea is to
#

{%- set default_defaults = {
  'cron_hour': 2,
  'cron_minute': 5,
  'has_db': True,
  'has_app': True,
  'users': ['user1'],
  'db': {'name': 'lizmap',
         'user': 'lizmap',
         'password': 'lizmap',},
} %}

{%- set default_env_defaults = {
  'dev': {},
  'prod': {}
 } %}

{#
# Makina project per project macro couple (install_lizmap/install_project)
#}
{%- macro install_lizmap_project_do(common) %}
# install postgresql only if we have the db role enabled
{%-   if common.data.has_app %}
{{-     lizmap_pkgs(common)}}
{{-     lizmap_app(common)}}
{%-   endif %}
{%-   if common.data.has_db %}
{{-     lizmap_db(common)}}
{%-   endif %}
{%- endmacro %}

{# Look available arguments in _modules/mc_project.py:get_common_vars #}
{%- macro install_lizmap_project() %}
{%-  do kwargs.setdefault('defaults', default_defaults) %}
{%-  do kwargs.setdefault('env_defaults', default_env_defaults) %}
{%-  do kwargs.setdefault('user', 'lizmap') %}
{%-  set common = salt['mc_project.get_common_vars'](*varargs, **kwargs) %}
{%-  if common.data.has_app %}
{%-    do common.sls_includes.extend(['makina-states.services.php.fcgid_with_apache'])%}
{%-    do common.sls_includes.extend(['makina-states.services.gis.qgis',])%}
{%-  endif %}
{%-  if common.data.has_db %}
{%-   do common.sls_includes.extend(['makina-states.services.gis.postgis',])%}
{%-  endif %}
{{-  base.install_project(common, install_macro=install_lizmap_project_do) }}
{%- endmacro %}
