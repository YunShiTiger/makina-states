{%- import "makina-states/projects/1/zope.jinja" as zope with context %}
{%- set services = zope.services %}
{%- set localsettings = salt['mc_localsettings.settings']() %}
{%- import "makina-states/services/monitoring/circus/macros.jinja" as circus with context %}
{% macro install_dependancies(common) %}
{% if common.full %}
beecollab_install_dependancies:
  pkg.{{salt['mc_pkgs.settings']()['installmode']}}:
    - pkgs:
      - ffmpeg
      - ffmpeg2theora
{% endif %}
{% endmacro %}

{% macro install_zope(common) %}
{{ zope.install_generic_zope_project(*varargs, **kwargs) }}
{#
{{ circus.circusAddWatcher(common.name + "-trancode",
                           common.project_root+"/bin/transcodedeamon",
                           uid=common.user,
                           gid=common.group,
                           shell=True,
                           working_dir=common.project_root) }}

#}
{% endmacro %}

{% macro install_setup(common) %}
{# Install npm + npm install in resources/dev + grunt #}
{% if common.full %}
beecollab_project_setup_grunt-cli:
  npm.installed:
    - name: grunt-cli

beecollab_project_setup_npm:
  npm.bootstrap:
    - name: {{ common['project_root'] }}/src/collective.rcse/collective/rcse/resources/dev/
    - user: {{ common['user'] }}
{% endif %}

beecollab_project_setup:
  cmd.run:
    - name: grunt
    - cwd: {{ common['project_root'] }}/src/collective.rcse/collective/rcse/resources/dev/
    - unless: test -e  {{ common['project_root'] }}/src/collective.rcse/collective/rcse/resources/desktop/font/FontAwesome.otf
    - user: {{ common['user'] }}

{% endmacro %}

{% macro install_beecollab_project() %}
{% do kwargs.setdefault('url', 'ssh://git@gitorious.makina-corpus.net/beecollab/beecollab.git') -%}
{% if varargs|length < 1 %}
{% do kwargs.setdefault('name', 'beecollab') -%}
{% endif %}
{% do kwargs.setdefault('user', 'beecollab') -%}
{% do kwargs.setdefault('domain', 'beecollab.makina-corpus.net') -%}

{% if kwargs.get('full', True) %}
{% do kwargs.setdefault('sls_includes', [
  'makina-states.services.collab.etherpad'
  ]) -%}
{% else %}
{% do kwargs.setdefault('sls_includes', [
  'makina-states.services.collab.etherpad-standalone'
  ]) -%}
{% endif %}

{% set common = salt['mc_project.get_common_vars'](*varargs, **kwargs) -%}

{{ install_dependancies(common) }}
{{ install_zope(common, *varargs, **kwargs) }}
{{ install_setup(common) }}
{% endmacro %}
