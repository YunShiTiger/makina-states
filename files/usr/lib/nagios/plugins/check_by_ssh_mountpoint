#!/bin/bash

help="\nCheck free space by ssh\nUsage: ./check_by_ssh_mountpoint -u ssh_user -h ssh_host -p ssh-port -m mountpoint -w warning -c critical
\nOptions: \t-u ssh_user\n\t\t-h ssh_host\n\t\t-p ssh_port\n\t\t-m mountpoint\n\t\t-w warning (free space left in %)\n\t\t-c critical (free space left in %)\n"

if [ "${1}" = "--help" -o "${#}" = "0" ];
       then
       echo -e "${help}";
       exit 1;
fi

# Get user-given variables
while getopts "u:h:p:m:w:c:" Input;
do
       case ${Input} in
       u)      ssh_user=${OPTARG};;
       h)      ssh_host=${OPTARG};;
       p)      ssh_port=${OPTARG};;
       m)      mountpoint=${OPTARG};;
       w)      warning=${OPTARG};;
       c)      critical=${OPTARG};;
       *)      echo "Wrong option given. Please use options -u for ssh_user, -h for ssh_host, -p for ssh_port, -m for mountpoint, -w for warning and -c for critical"
               exit 1
               ;;
       esac
done

STATE_OK=0              # define the exit code if status is OK
STATE_WARNING=1         # define the exit code if status is Warning
STATE_CRITICAL=2        # define the exit code if status is Critical
STATE_UNKNOWN=3         # define the exit code if status is Unknown


ssh="$(ssh -q -p "$ssh_port" "$ssh_user@$ssh_host" "df --output=pcent,used,size -h $mountpoint | tail -n 1")"

percent_used="$(echo "$ssh" | sed -ne 's/\([0-9]\+\)\(.*\)/\1/p')"
percent_free="$((100-$percent_used))"

size_used="$(echo "$ssh" | awk '{print $2}')"
size_total="$(echo "$ssh" | awk '{print $3}')"

if [ $percent_free -le $critical ]; then
 echo "CRITICAL: $percent_free% left ($size_used/$size_total)"
 exit $STATE_CRITICAL
fi
if [ $percent_free -le $warning ]; then
 echo "WARNING: $percent_free% left ($size_used/$size_total)"
 exit $STATE_CRITICAL
fi

echo "OK: $percent_free% left ($size_used/$size_total)"
exit $STATE_OK

