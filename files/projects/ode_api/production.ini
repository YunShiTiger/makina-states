###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:ode

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm
    pyramid_exclog

sqlalchemy.url = postgresql://{{ dbName }}:{{ dbUser }}@localhost/{{ dbPassword }}
domain = {{ domain }}

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, ode, sqlalchemy, exception

[handlers]
keys = console, file, email

[formatters]
keys = generic, exception

[logger_root]
level = WARN
handlers = console

[logger_ode]
level = WARN
handlers =
qualname = ode

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[logger_exception]
level = ERROR
handlers = file, email
qualname = exc_logger

[handler_email]
level = ERROR
class = handlers.SMTPHandler
args = (('localhost', 25), '{{ fromEmail }}', ['{{ admins|join("', '") }}'], 'ODE Exception')
formatter = exception

[handler_file]
level = ERROR
class = logging.handlers.RotatingFileHandler
args = ('%(here)s/log/error.log','a')
maxBytes = 100000
backupCount = 5
formatter = exception

[formatter_exception]
format = %(asctime)s %(message)s
