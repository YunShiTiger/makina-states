# MANAGED VIA SALT - DO NOT EDIT
{% set data=salt['mc_utils.json_load'](data) %}
{% macro get_config(opt, default='') %}
{%- set pref=''%}
{%- set val=data.get(opt, None)%}
{%- if val is none %}
{%- set pref='# ' %}
{%- set val=default %}
{%- endif %}
{%- if not val and not val is not none%}
{%- set val = '' %}
{%- endif %}
{%- if not salt['mc_utils.is_a_list'](val) %}
{%- set val = [val] %}
{%- endif %}
{%- for v in val %}
{{pref}}{{opt}} = {{v}}
{% endfor -%}
{%- endmacro %}

mode = client
{{get_config('lockfile', '/var/run/burp-client.lock')}}
{{get_config('port', '4971')}}
{{get_config('server', '127.0.0.1')}}
{{get_config('password', 'abcdefgh')}}
{{get_config('cname', 'testclient')}}
{{get_config('pidfile', '/var/run/burp.client.pid')}}
{{get_config('syslog', '0')}}
{{get_config('stdout', '1')}}
{{get_config('progress_counter', '1')}}
# Ratelimit throttles the send speed. Specified in Megabits per second (Mb/s).
{{get_config('ratelimit', '1.5')}}
# Network timeout defaults to 7200 seconds (2 hours).
{{get_config('network_timeout', '7200')}}
# The directory to which autoupgrade files will be downloaded.
# To never autoupgrade, leave it commented out.
# autoupgrade_dir=/etc/burp/autoupgrade/client
# OS path component for the autoupgrade directory on the server.
# autoupgrade_os=test_os

# Set server_can_restore to 0 if you do not want the server to be able to
# initiate a restore.
{{get_config('server_can_restore', '0')}}

# Set an encryption password if you do not trust the server with your data.
# Note that this will mean that network deltas will not be possible. Each time
# a file changes, the whole file will be transferred on the next backup.
{{get_config('encryption_password', 'My^$pAsswIrD%@')}}

# More configuration files can be read, using syntax like the following
# (without the leading '# ').
# . path/to/more/conf

# Run as different user/group.
{{get_config('user', 'graham')}}
{{get_config('group', 'nogroup')}}

{{get_config('cross_filesystem', '/home')}}
{{get_config('cross_all_filesystems', '0')}}

# Uncomment the following lines to automatically generate a certificate signing
# request and send it to the server.
{{get_config('ca_burp_ca', '/usr/sbin/burp_ca')}}
{{get_config('ca_csr_dir', '/etc/burp/CA-client')}}

# SSL certificate authority - same file on both server and client
{{get_config('ssl_cert_ca', '/etc/burp/ssl_cert_ca.pem')}}

# Client SSL certificate
{{get_config('ssl_cert', '/etc/burp/ssl_cert-client.pem')}}

# Client SSL key
{{get_config('ssl_key', '/etc/burp/ssl_cert-client.key')}}

# Client SSL ciphers
{{get_config('ssl_ciphers', '')}}

# SSL key password
{{get_config('ssl_key_password', 'password')}}

# Common name in the certificate that the server gives us
{{get_config('ssl_peer_cn', 'burpserver')}}

# Example syntax for pre/post scripts
{{get_config('backup_script_pre', '/path/to/a/script')}}
{{get_config('backup_script_post', '/path/to/a/script')}}
{{get_config('restore_script_pre', '/path/to/a/script')}}
{{get_config('restore_script_post', '/path/to/a/script')}}

# The following options specify exactly what to backup.
# The server will override them if there is at least one 'include=' line on
# the server side.
{{get_config('include', '/home')}}
{{get_config('exclude', '/home/graham/testdir/librsync-0.9.7/testsuite')}}
# Exclude file names ending in '.vdi' or '.vmdk' (case insensitive)
{{get_config('exclude_ext', 'vmd')}}
# Exlude file path matching a regular expression
# (note that 'include_regex' is not yet implemented)
{{get_config('exclude_regex', '\.cache')}}
# Exclude various temporary file systems. You may want to add devfs, devpts,
# proc, ramfs, etc.
{{get_config('exclude_fs', 'sysfs')}}
# Exclude files based on size. Defaults are 0, which means no limit.
{{get_config('min_file_size', '0 Mb')}}
{{get_config('max_file_size', '0 Mb')}}
# The content of directories containing a filesystem entry named like this
# will not be backed up.
{{get_config('nobackup', '.nobackup')}}
# By default, burp backups up the fifos themselves, rather than reading from
# them. These two options let you choose a particular fifo to read, or read
# from all fifos.
{{get_config('read_fifo', '/path/to/a/fifo')}}
{{get_config('read_all_fifos', '0')}}
# The same for block device nodes.
{{get_config('read_blockdev', '/path/to/a/blockdev')}}
{{get_config('read_all_blockdevs', '0')}}
# Exclude files from compression by extension.
{{get_config('exclude_comp', 'bz2')}}
{{get_config('exclude_comp', 'gz')}}
