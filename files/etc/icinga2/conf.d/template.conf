# MANAGED VIA SALT -- DO NOT EDIT
{% set file = salt['mc_utils.json_load'](file) %}
{% set objects = salt['mc_icinga2.add_configuration_object'](get=True, get_objects_file=file) -%}

{% for object in objects -%}

{%- if 'fromsettings' in object -%}
{# when fromsettings is used, get the object from settings - we can't do this in the sls file in order to save the ram #}
{% set object = salt['mc_utils.json_dump'](salt['mc_icinga2.get_settings_for_object']('objects_definitions', object.fromsettings)) %}
{% set object = salt['mc_utils.json_load'](object) %}
{%- endif -%}

{# transform all values in object in string #}
{% set object = salt['mc_icinga2.format'](object) %}

{% if object.template %}
template {{object.type}} "{{object.name}}" {
{%- else %}
object {{object.type}} "{{object.name}}" {
{%- endif %}

{%- for key, value in object.attrs.items() -%}
{%-     if value is mapping %} {# we can have a subdictionary like "arguments" #}
    {{key}} = {
{%-         for kkey, vvalue in value.items() %}
        {{kkey}} = {{vvalue}}
{%-         endfor %}
    }
{%     else %}
{%-         if key in ["import"] %} {# some keys like "import" don't want "=" #}
{%-             for vvalue in value %}
    {{key}} {{vvalue}}
{%              endfor %}
{%-         else %}
    {{key}} = {{value}}
{%-         endif %}
{%     endif %}
{%- endfor -%}

}

{%- if 'parents' in object.attrs %}
# parents
{% for parent in object.attrs.parents -%}
apply Dependency {{parent}} to Host {
    parent_host_name = {{parent}}
    assign where host.name == {{object.name}}
}
{% endfor %}
{%- endif -%}


{% endfor -%}
