{#-
# LocalSettings exporterd variables
# see makina-states.localsettings
#}

{%- import "makina-states/_macros/funcs.jinja" as funcs with context %}
{#- expose imported macros #}
{%- set funcs = funcs %}

{#- see _modules/mc_localsettings.py for exposed settings #}
{%- set settings = salt['mc_localsettings.settings']() %}
{%- set metadata = salt['mc_localsettings.metadata']() %}
{%- set registry = salt['mc_localsettings.registry']() %}


{# dns #}
{%- set hostname = settings.hostname %}
{%- set domain = settings.domain %}

{# locales #}
{%- set locales = settings.locales %}
{%- set default_locale = settings.default_locale %}

{# nodejs #}
{%- set nodejs = settings.nodejsSettings %}

{# etckeeper #}
{%- set etckeeper = settings.etckeeper %}

{# timezoneSettings #}
{%- set timezoneSettings = settings.timezoneSettings %}

{# pythonSettings #}
{%- set pythonSettings = settings.pythonSettings %}

{# collection of filesystem paths #}
{%- set locations = settings.locations %}

{#- logrotation settings #}
{%- set rotate = settings.rotate %}

{#- SALT based network managment & settings #}
{%- set networkManaged = settings.networkManaged %}
{% set networkInterfaces = settings.networkInterfaces %}

{#- LDAP integration #}
{%- set ldapVariables = settings.ldapVariables %}
{%- set ldapEn = settings.ldapEn %}

{#- Editor group #}
{%- set group = settings.group %}
{%- set groupId = settings.groupId %}

{#- System Users & SSH accces configuration #}
{%- set defaultSysadmins = settings.defaultSysadmins %}
{%- set users = settings.users %}
{%- set user_keys = settings.user_keys %}
{%- set keysMappings = settings.keysMappings %}


{# hosts managment via pillar #}
{%- set hosts_list = settings.hosts_list %}
{%- set makinahosts = settings.makinahosts %}

{#- package manager settings #}
{%- set debian_mirror = settings.debian_mirror %}
{%- set ubuntu_mirror = settings.ubuntu_mirror %}
{%- set keyserver     = settings.keyserver     %}
{%- set dist          = settings.dist          %}
{%- set lts_dist      = settings.lts_dist      %}
{%- set ubuntu_lts    = settings.ubuntu_lts    %}
{%- set ubuntu_last   = settings.ubuntu_last   %}
{%- set udist         = settings.udist         %}
{%- set debian_stable = settings.debian_stable %}
{%- set ddist         = settings.ddist         %}
{%- set dcomps        = settings.dcomps        %}
{%- set ucomps        = settings.ucomps        %}
{%- set installmode   = settings.installmode   %}

{#- JDK Settings #}
{%- set jdkSettings = settings.jdkSettings %}
{#- JDK default version #}
{%- set jdkDefaultVer = settings.jdkDefaultVer %}

{#- RVM #}
{%- set rvmSettings = settings.rvmSettings %}
{%- set rvm_url   = settings.rvm_url   %}
{%- set rubies    = settings.rubies    %}
{%- set rvm_user  = settings.rvm_user  %}
{%- set rvm_group = settings.rvm_group %}

{#- Node.js #}
{%- set npmSettings = settings.npmSettings %}

{# SSL settings for reuse in states #}
{%- set SSLSettings = settings.SSLSettings %}

{% macro autocommit(akind) %}
{# be sure to run at the end of provisionning to commit
# /etc changes #}
{# we do not depend directly on localsettings
# because of interrecursivity but verify that those
# steps are always executed after etckeeper main
# installation
#}
{{akind}}-final-etckeeper-run:
  cmd.run:
    - order: last
    - name: {{locations.conf_dir}}/cron.daily/etckeeper "commit from salt"
    - onlyif: >
        test -e {{locations.conf_dir}}/cron.daily/etckeeper
        &&
        test -e $(which etckeeper 2>/dev/null)
{% endmacro %}
# vim:set nofoldenable:
