---
- name: lxc {{lxc_from_container}} config test
  stat:
    path: "{{lxc_path}}/{{lxc_container_name}}/config"
  register: lxc_config_test
  failed_when: False
  tags: makinastates_lxc_create,makinastates_lxc_clone_lxc
- name: "get rootfs of {{lxc_from_container}}"
  shell: |-
    set -ex
    cfg="{{lxc_path}}/{{lxc_from_container}}/config"
    test -e $cfg
    egrep "^lxc.rootfs *= " "$cfg" | awk '{print $3}'
  when: "lxc_clone_snapshot in [True, 'true', 'True']"
  tags: makinastates_lxc_create,makinastates_lxc_clone_lxc
  register: makinastates_lxc_clone_lxc_rootfs
- name: "lxc clone (from container: {{lxc_from_container}})"
  shell: |
    set -ex
    if which lxc-copy 2>&1 >/dev/null;then
       lxc-copy -P {{lxc_path}} -n {{lxc_from_container}} -N {{lxc_container_name}} -B {{lxc_backing_store}} -d\
         {% if lxc_clone_snapshot in [True, 'true', 'True']%}-s{% endif %}\
         ;
    else
       lxc-clone -P {{lxc_path}} -o {{lxc_from_container}} -n {{lxc_container_name}} -B {{lxc_backing_store}}\
         {% if lxc_clone_snapshot in [True, 'true', 'True']%}-s{% endif %}\
         ;
    fi
  when: 'makinastates_lxc_create_lxc_test.stdout != "0" and not lxc_config_test.stat.exists'
  tags: makinastates_lxc_create,makinastates_lxc_clone_lxc
