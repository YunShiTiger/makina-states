#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import os
import json
from ansible.module_utils.basic import *

DOCUMENTATION = '''
---
module: saltcall
version_added: "0.1"
short_description: wrapper to makina-states salt-call 'saltcaller' script
description:
    - call salt-call
    - thie module can use two modes of execution either by
      using the embedded (and maybe stale) saltcaller script
      or by using the original script on the filesystem if
      present and found.
options:
    function: exec module/fun to call
    args: positional/name args (salt cli formated)

TO maintainers:
    - do not edit saltcall.py but saltcall.py.in
    - run hacking/gen_ansible_saltcaller.py to
      refresh the SALTCALLER SLOT from saltcall.py.in
      and regerenerate saltcall.py
'''

EXAMPLES = '''
- action: saltcall \
        function=state.sls args='["makina-states.cloud.generic.dnsconf"]'
'''

# generated via hacking/gen_ansible_saltcaller.py
# this embeds the saltcaller script inside the ansible module
# but not in plain text as ansible would quote it
SALTCALLER = """
Cgpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFic29sdXRlX2ltcG9ydApmcm9tIF9fZnV0dXJlX18g
aW1wb3J0IGRpdmlzaW9uCmZyb20gX19mdXR1cmVfXyBpbXBvcnQgcHJpbnRfZnVuY3Rpb24KJycn
CgouLiBfbWNfc3RhdGVzX3NhbHRjYWxsZXI6Cgp3cmFwcGVycyB0byBzYWx0IHNoZWxsIGNvbW1h
bmRzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKVGhpcyBpcyBub3QgaW5jbHVk
ZWQgaW4gYSBzYWx0IG1vZHVsZSBhbmQgaXNvbGF0ZWQgdG8gYmUKcGlja2xhYmxlIGFuZCB1c2Vk
IHRob3JvdWdoIHB5dGhvbiBtdWx0aXByb2Nlc3NpbmcgYXMgYSB0YXJnZXQKCgpUaGUgbW9kdWxl
IGhhcyByZWR1bmRhbnQgZnVuY3Rpb25zIHdpdGggdGhlIG1ha2luYS1zdGF0ZXMgY29kZWJhc2Ug
YnV0IHRoZSBnb2FsIGlzIHRoYXQgaXQgaXMgc2VsZmNvbnRhaW5lZCBhbmQgZGVwZW5kZW5jeSBs
ZXNzLgoKJycnCgppbXBvcnQgc2hsZXgKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBjb3B5CmltcG9y
dCBjU3RyaW5nSU8KaW1wb3J0IG9zCmltcG9ydCBwaXBlcwppbXBvcnQgc3VicHJvY2VzcwppbXBv
cnQgc3lzCmltcG9ydCBzaXgKaW1wb3J0IHRpbWUKaW1wb3J0IHRyYWNlYmFjawppbXBvcnQgbG9n
Z2luZwppbXBvcnQgZmNudGwKaW1wb3J0IGRhdGV0aW1lCmltcG9ydCBqc29uCgoKdHJ5OgogICAg
aW1wb3J0IGNoYXJkZXQKICAgIEhBU19DSEFSREVUID0gVHJ1ZQpleGNlcHQgSW1wb3J0RXJyb3I6
CiAgICBIQVNfQ0hBUkRFVCA9IEZhbHNlCgoKX21hcmtlciA9IG9iamVjdCgpCk5PX1JFVFVSTiA9
ICdfX0NBTExFUl9OT19SRVRVUk5fXycKTk9SRVRVUk5fUkVUQ09ERSA9IDUKTk9EQVRBX1JFVENP
REUgPSA2Ck5PRElDVF9SRVRDT0RFID0gNwpOT19JTk5FUl9ESUNUX1JFVENPREUgPSA4ClNUQVRF
X1JFVF9JU19OT1RfQV9ESUNUX1JFVENPREUgPSAxMQpTVEFURV9GQUlMRURfUkVUQ09ERSA9IDkK
VElNRU9VVF9SRVRDT0RFID0gLTY2NgpOT19SRVRDT0RFID0gLTY2OApsb2cgPSBsb2dnaW5nLmdl
dExvZ2dlcihfX25hbWVfXykKCgpkZWYganNvbl9sb2FkKGRhdGEpOgogICAgY29udGVudCA9IGRh
dGEucmVwbGFjZSgnIC0tLUFOVExJU0xBU0hfTi0tLSAnLCAnXG4nKQogICAgY29udGVudCA9IGpz
b24ubG9hZHMoY29udGVudCkKICAgIHJldHVybiBjb250ZW50CgoKZGVmIGpzb25fZHVtcChkYXRh
LCBwcmV0dHk9RmFsc2UpOgogICAgaWYgcHJldHR5OgogICAgICAgIGNvbnRlbnQgPSBqc29uLmR1
bXBzKAogICAgICAgICAgICBkYXRhLCBpbmRlbnQ9NCwgc2VwYXJhdG9ycz0oJywnLCAnOiAnKSkK
ICAgIGVsc2U6CiAgICAgICAgY29udGVudCA9IGpzb24uZHVtcHMoZGF0YSkKICAgICAgICBjb250
ZW50ID0gY29udGVudC5yZXBsYWNlKCdcbicsICcgLS0tQU5UTElTTEFTSF9OLS0tICcpCiAgICBy
ZXR1cm4gY29udGVudAoKCmRlZiBtYWdpY3N0cmluZyh0aGVzdHIpOgogICAgJycnCiAgICBDb252
ZXJ0IGFueSBzdHJpbmcgdG8gVVRGLTggRU5DT0RFRCBvbmUKICAgICcnJwogICAgaWYgbm90IEhB
U19DSEFSREVUOgogICAgICAgIHJldHVybiB0aGVzdHIKICAgIHNlZWsgPSBGYWxzZQogICAgaWYg
KAogICAgICAgIGlzaW5zdGFuY2UodGhlc3RyLCAoaW50LCBmbG9hdCwgbG9uZywKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIGRhdGV0aW1lLmRhdGUsCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBkYXRldGltZS50aW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZXRpbWUu
ZGF0ZXRpbWUpKQogICAgKToKICAgICAgICB0aGVzdHIgPSAiezB9Ii5mb3JtYXQodGhlc3RyKQog
ICAgaWYgaXNpbnN0YW5jZSh0aGVzdHIsIHVuaWNvZGUpOgogICAgICAgIHRyeToKICAgICAgICAg
ICAgdGhlc3RyID0gdGhlc3RyLmVuY29kZSgndXRmLTgnKQogICAgICAgIGV4Y2VwdCBFeGNlcHRp
b246CiAgICAgICAgICAgIHNlZWsgPSBUcnVlCiAgICBpZiBzZWVrOgogICAgICAgIHRyeToKICAg
ICAgICAgICAgZGV0ZWN0ZWRlbmMgPSBjaGFyZGV0LmRldGVjdCh0aGVzdHIpLmdldCgnZW5jb2Rp
bmcnKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgIGRldGVjdGVkZW5jID0g
Tm9uZQogICAgICAgIGlmIGRldGVjdGVkZW5jOgogICAgICAgICAgICBzZGV0ZWN0ZWRlbmMgPSBk
ZXRlY3RlZGVuYy5sb3dlcigpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2RldGVjdGVkZW5j
ID0gJycKICAgICAgICBpZiBzZGV0ZWN0ZWRlbmMuc3RhcnRzd2l0aCgnaXNvLTg4NTknKToKICAg
ICAgICAgICAgZGV0ZWN0ZWRlbmMgPSAnSVNPLTg4NTktMTUnCgogICAgICAgIGZvdW5kX2VuY29k
aW5ncyA9IFsKICAgICAgICAgICAgJ0lTTy04ODU5LTE1JywgJ1RJUy02MjAnLCAnRVVDLUtSJywK
ICAgICAgICAgICAgJ0VVQy1KUCcsICdTSElGVF9KSVMnLCAnR0IyMzEyJywgJ3V0Zi04JywgJ2Fz
Y2lpJywKICAgICAgICBdCiAgICAgICAgaWYgc2RldGVjdGVkZW5jIG5vdCBpbiAoJ3V0Zi04Jywg
J2FzY2lpJyk6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlmIG5vdCBpc2luc3Rh
bmNlKHRoZXN0ciwgdW5pY29kZSk6CiAgICAgICAgICAgICAgICAgICAgdGhlc3RyID0gdGhlc3Ry
LmRlY29kZShkZXRlY3RlZGVuYykKICAgICAgICAgICAgICAgIHRoZXN0ciA9IHRoZXN0ci5lbmNv
ZGUoZGV0ZWN0ZWRlbmMpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAg
ICAgICBmb3IgaWR4LCBpIGluIGVudW1lcmF0ZShmb3VuZF9lbmNvZGluZ3MpOgogICAgICAgICAg
ICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2Uo
dGhlc3RyLCB1bmljb2RlKSBhbmQgZGV0ZWN0ZWRlbmM6CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICB0aGVzdHIgPSB0aGVzdHIuZGVjb2RlKGRldGVjdGVkZW5jKQogICAgICAgICAgICAgICAg
ICAgICAgICB0aGVzdHIgPSB0aGVzdHIuZW5jb2RlKGkpCiAgICAgICAgICAgICAgICAgICAgICAg
IGJyZWFrCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAg
ICAgICAgICAgICAgaWYgaWR4ID09IChsZW4oZm91bmRfZW5jb2RpbmdzKSAtIDEpOgogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgIGlmIGlzaW5zdGFuY2UodGhlc3RyLCB1bmlj
b2RlKToKICAgICAgICB0aGVzdHIgPSB0aGVzdHIuZW5jb2RlKCd1dGYtOCcpCiAgICB0aGVzdHIg
PSB0aGVzdHIuZGVjb2RlKCd1dGYtOCcpLmVuY29kZSgndXRmLTgnKQogICAgcmV0dXJuIHRoZXN0
cgoKCmRlZiB0ZXJtaW5hdGUocHJvY2Vzcyk6CiAgICBmb3IgaSBpbiBbJ3Rlcm1pbmF0ZScsICdr
aWxsJ106CiAgICAgICAgdHJ5OgogICAgICAgICAgICBnZXRhdHRyKHByb2Nlc3MsIGkpKCkKICAg
ICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICBwYXNzCgoKZGVmIGRvX3ZhbGlkYXRl
X3N0YXRlcyhkYXRhLCByZXRjb2RlX3Bhc3N0aHJvdWdoPU5vbmUsIHJldGNvZGU9Tm9uZSk6CiAg
ICBpZiBub3QgZGF0YToKICAgICAgICByZXR1cm4gTk9EQVRBX1JFVENPREUKICAgIGlmIG5vdCBp
c2luc3RhbmNlKGRhdGEsIGRpY3QpOgogICAgICAgIHJldHVybiBOT0RJQ1RfUkVUQ09ERQogICAg
dHJ5OgogICAgICAgICMgaWYgd2Ugc2V0IHJjX3Bhc3N0aHJvdWdoKGRlZmF1bHQpCiAgICAgICAg
IyBhbmQgd2UgZ290IGEgd2VsbCBrbm93biByZXR1cm4gY29kZSwgdGhlbiB1c2UgaXQKICAgICAg
ICByYyA9IGludChyZXRjb2RlKQogICAgICAgIGFzc2VydCByYyBpbiBbMCwgMl0gYW5kIHJldGNv
ZGVfcGFzc3Rocm91Z2gKICAgICAgICByZXR1cm4gcmMKICAgIGV4Y2VwdCBBc3NlcnRpb25FcnJv
cjoKICAgICAgICBwYXNzCiAgICAjIGVsc2UgdHJ5IHRvIGdldCBvdXJzZWx2ZXMgaWYgZXZlcnl0
aGluZyBkaWQgZ29uZSB3ZWxsCiAgICBmb3IgaSwgcmRhdGEgaW4gZGF0YS5pdGVtcygpOgogICAg
ICAgIGlmIG5vdCBpc2luc3RhbmNlKHJkYXRhLCBkaWN0KToKICAgICAgICAgICAgcmV0dXJuIE5P
X0lOTkVSX0RJQ1RfUkVUQ09ERQogICAgICAgIGZvciBqLCBzdGF0ZWRhdGEgaW4gcmRhdGEuaXRl
bXMoKToKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2Uoc3RhdGVkYXRhLCBkaWN0KToKICAg
ICAgICAgICAgICAgIHJldHVybiBTVEFURV9SRVRfSVNfTk9UX0FfRElDVF9SRVRDT0RFCiAgICAg
ICAgICAgIGVsaWYgc3RhdGVkYXRhLmdldCgncmVzdWx0JywgTm9uZSkgaXMgRmFsc2U6CiAgICAg
ICAgICAgICAgICBpZiBub3QgcmV0Y29kZV9wYXNzdGhyb3VnaDoKICAgICAgICAgICAgICAgICAg
ICByZXR1cm4gU1RBVEVfRkFJTEVEX1JFVENPREUKICAgIHJldHVybiAwCgoKZGVmIGZhaWxlZChy
ZXQsIGVycm9yPU5vbmUpOgogICAgcmV0WydzdGF0dXMnXSA9IHJldFsncmV0Y29kZSddID09IDAK
ICAgIGlmIGVycm9yIGlzIG5vdCBOb25lIGFuZCBub3QgcmV0WydzdGF0dXMnXToKICAgICAgICBy
ZXRbJ2Vycm9yJ10gPSBlcnJvcgogICAgaWYgcmV0WydlcnJvciddOgogICAgICAgIHJldFsnZXJy
b3InXSA9IG1hZ2ljc3RyaW5nKHJldFsnZXJyb3InXSkKICAgIHJldHVybiByZXQKCgpkZWYgbm9u
X2Jsb2NrX3JlYWQob3V0cHV0KToKICAgIHRyeToKICAgICAgICBmZCA9IG91dHB1dC5maWxlbm8o
KQogICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgcmV0dXJuICIiCiAgICBlbHNlOgogICAg
ICAgIGZsID0gZmNudGwuZmNudGwoZmQsIGZjbnRsLkZfR0VURkwpCiAgICAgICAgZmNudGwuZmNu
dGwoZmQsIGZjbnRsLkZfU0VURkwsIGZsIHwgb3MuT19OT05CTE9DSykKICAgICAgICB0cnk6CiAg
ICAgICAgICAgIHJldHVybiBvdXRwdXQucmVhZCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoK
ICAgICAgICAgICAgcmV0dXJuICIiCgoKZGVmIGRvX3Byb2Nlc3NfaW9zKHByb2Nlc3MsCiAgICAg
ICAgICAgICAgICAgICB2ZXJib3NlPUZhbHNlLAogICAgICAgICAgICAgICAgICAgb3V0cHV0X291
dD1zeXMuc3Rkb3V0LAogICAgICAgICAgICAgICAgICAgb3V0cHV0X2Vycj1zeXMuc3RkZXJyLAog
ICAgICAgICAgICAgICAgICAgc3Rkb3V0X3Bvcz1Ob25lLAogICAgICAgICAgICAgICAgICAgc3Rk
ZXJyX3Bvcz1Ob25lLAogICAgICAgICAgICAgICAgICAgc3Rkb3V0PU5vbmUsCiAgICAgICAgICAg
ICAgICAgICBzdGRlcnI9Tm9uZSk6CiAgICBpZiBzdGRvdXQgaXMgTm9uZToKICAgICAgICBzdGRv
dXQgPSBjU3RyaW5nSU8uU3RyaW5nSU8oKQogICAgaWYgc3RkZXJyIGlzIE5vbmU6CiAgICAgICAg
c3RkZXJyID0gY1N0cmluZ0lPLlN0cmluZ0lPKCkKICAgIHN0cmVhbXMgPSB7J291dCc6IHN0ZG91
dF9wb3MsICdlcnInOiBzdGRlcnJfcG9zfQogICAgc3RkbyA9IG5vbl9ibG9ja19yZWFkKHByb2Nl
c3Muc3Rkb3V0KQogICAgc3RkZSA9IG5vbl9ibG9ja19yZWFkKHByb2Nlc3Muc3RkZXJyKQogICAg
aWYgc3RkbzoKICAgICAgICBzdGRvdXQud3JpdGUoc3RkbykKICAgIGlmIHN0ZGU6CiAgICAgICAg
c3RkZXJyLndyaXRlKHN0ZGUpCiAgICBmb3IgaywgdmFsLCBvdXQgaW4gKAogICAgICAgICgnb3V0
Jywgc3Rkb3V0LmdldHZhbHVlKCksIG91dHB1dF9vdXQpLAogICAgICAgICgnZXJyJywgc3RkZXJy
LmdldHZhbHVlKCksIG91dHB1dF9lcnIpLAogICAgKToKICAgICAgICBpZiBub3QgdmFsOgogICAg
ICAgICAgICBjb250aW51ZQogICAgICAgIHBvcyA9IHN0cmVhbXNba10KICAgICAgICBucG9zID0g
bGVuKHZhbCkgLSAxCiAgICAgICAgaWYgdmFsIGFuZCAoKHBvcyA9PSAwKSBvciAobnBvcyAhPSBw
b3MpKToKICAgICAgICAgICAgaWYgdmVyYm9zZToKICAgICAgICAgICAgICAgIG91dC53cml0ZSh2
YWxbcG9zOl0pCiAgICAgICAgc3RyZWFtc1trXSA9IG5wb3MKICAgIHJldHVybiBzdHJlYW1zWydv
dXQnXSwgc3RyZWFtc1snZXJyJ10sIHN0ZG8sIHN0ZGUKCgpkZWYgZm9ybWF0X2Vycm9yKHJldCk6
CiAgICAnJycKICAgIFRvIGF2b2lkIGxhcmdlIG1lbW9yeSB1c2FnZSwgb25seSBsYXp5IGZvcm1h
dCBlcnJvcnMgb24gZGVtYW5kCiAgICAnJycKICAgIHJldHVybiAoJycKICAgICAgICAgICAgJ19f
U0FMVENBTExFUl9FUlJPUl97cGlkfVxuJwogICAgICAgICAgICAne2Vycm9yfVxuJwogICAgICAg
ICAgICAnX19TQUxUQ0FMTEVSX0VORF9FUlJPUl97cGlkfVxuJwogICAgICAgICAgICAnJykuZm9y
bWF0KCoqcmV0KQoKCmRlZiBmb3JtYXRfb3V0cHV0KHJldCk6CiAgICAnJycKICAgIFRvIGF2b2lk
IGxhcmdlIG1lbW9yeSB1c2FnZSwgb25seSBsYXp5IGZvcm1hdCBlcnJvcnMgb24gZGVtYW5kCiAg
ICAnJycKICAgIHJldHVybiAoJycKICAgICAgICAgICAgJ19fU0FMVENBTExFUl9TVERFUlJfe3Bp
ZH1cbicKICAgICAgICAgICAgJ3tzdGRlcnJ9XG4nCiAgICAgICAgICAgICdfX1NBTFRDQUxMRVJf
RU5EX1NUREVSUl97cGlkfVxuJwogICAgICAgICAgICAnX19TQUxUQ0FMTEVSX1NURE9VVF97cGlk
fVxuJwogICAgICAgICAgICAne3N0ZG91dH1cbicKICAgICAgICAgICAgJ19fU0FMVENBTExFUl9F
TkRfU1RET1VUX3twaWR9XG4nCiAgICAgICAgICAgICcnKS5mb3JtYXQoKipyZXQpCgoKZGVmIGZv
cm1hdF9vdXRwdXRfYW5kX2Vycm9yKHJldCk6CiAgICAnJycKICAgIFRvIGF2b2lkIGxhcmdlIG1l
bW9yeSB1c2FnZSwgb25seSBsYXp5IGZvcm1hdCBlcnJvcnMgb24gZGVtYW5kCiAgICAnJycKICAg
IHJldHVybiBmb3JtYXRfZXJyb3IocmV0KSArIGZvcm1hdF9vdXRwdXQocmV0KQoKCmRlZiBjbWQo
YXJncywKICAgICAgICB0aW1lb3V0PU5vbmUsCiAgICAgICAgc3RkaW49Tm9uZSwKICAgICAgICBz
dGRvdXQ9Tm9uZSwKICAgICAgICBzbGVlcF9pbnRlcnZhbD1Ob25lLAogICAgICAgIHN0ZGVycj1O
b25lLAogICAgICAgIG5vX3F1b3RlPU5vbmUsCiAgICAgICAgdmVyYm9zZT1Ob25lLAogICAgICAg
IGVudj1Ob25lKToKICAgIGlmIG5vdCBzbGVlcF9pbnRlcnZhbDoKICAgICAgICBzbGVlcF9pbnRl
cnZhbCA9IDAuMDQKICAgIGlmIG5vX3F1b3RlIGlzIE5vbmU6CiAgICAgICAgbm9fcXVvdGUgPSBG
YWxzZQogICAgaWYgbm90IGVudjoKICAgICAgICBlbnYgPSB7fQogICAgZW52aXJvbiA9IGNvcHku
ZGVlcGNvcHkob3MuZW52aXJvbikKICAgIGVudmlyb24udXBkYXRlKGNvcHkuZGVlcGNvcHkoZW52
KSkKICAgIG5vdyA9IHRpbWUudGltZSgpCiAgICBjbGkgPSBbbWFnaWNzdHJpbmcoYSkgZm9yIGEg
aW4gYXJnc10KICAgIG9zcGlkID0gcGlkID0gb3MuZ2V0cGlkKCkKICAgIGlmIG5vdCBub19xdW90
ZToKICAgICAgICBjbGkgPSBbcGlwZXMucXVvdGUoYSkgZm9yIGEgaW4gY2xpXQogICAgcmV0Y29k
ZSwgZm9yY2VfcmV0Y29kZSA9IE5vbmUsIE5vbmUKICAgIHN0ZG91dF9wb3MsIHN0ZGVycl9wb3Mg
PSBOb25lLCBOb25lCiAgICBlcnJvciA9IE5vbmUKICAgIGlmIHN0ZG91dCBpcyBOb25lOgogICAg
ICAgIHN0ZG91dCA9IGNTdHJpbmdJTy5TdHJpbmdJTygpCiAgICBpZiBzdGRlcnIgaXMgTm9uZToK
ICAgICAgICBzdGRlcnIgPSBjU3RyaW5nSU8uU3RyaW5nSU8oKQogICAgcHJvY2VzcyA9IE5vbmUK
ICAgIHRyeToKICAgICAgICBwcm9jZXNzID0gc3VicHJvY2Vzcy5Qb3BlbigKICAgICAgICAgICAg
Y2xpLAogICAgICAgICAgICBlbnY9ZW52LAogICAgICAgICAgICBzdGRpbj1zdGRpbiwKICAgICAg
ICAgICAgc3Rkb3V0PXN1YnByb2Nlc3MuUElQRSwKICAgICAgICAgICAgc3RkZXJyPXN1YnByb2Nl
c3MuUElQRSkKICAgICAgICB3aGlsZSBUcnVlOgogICAgICAgICAgICBpZiBwaWQgPT0gb3NwaWQg
b3IgcGlkIGlzIE5vbmU6CiAgICAgICAgICAgICAgICBwaWQgPSBwcm9jZXNzLnBpZAogICAgICAg
ICAgICBpZiB0aW1lb3V0IGlzIG5vdCBOb25lIGFuZCAodGltZS50aW1lKCkgPj0gbm93ICsgdGlt
ZW91dCk6CiAgICAgICAgICAgICAgICB0ZXJtaW5hdGUocHJvY2VzcykKICAgICAgICAgICAgICAg
IGVycm9yID0gKAogICAgICAgICAgICAgICAgICAgICdqb2IgdG9vIGxvbmcgdG8gZXhlY3V0ZSwg
cHJvY2VzcyB3YXMga2lsbGVkXG4nCiAgICAgICAgICAgICAgICAgICAgJyAgezB9JwogICAgICAg
ICAgICAgICAgKS5mb3JtYXQoY2xpKQogICAgICAgICAgICAgICAgZm9yY2VfcmV0Y29kZSA9IFRJ
TUVPVVRfUkVUQ09ERQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0Y29kZSA9
IHByb2Nlc3MucG9sbCgpCiAgICAgICAgICAgICAgICBzdGRvdXRfcG9zLCBzdGRlcnJfcG9zLCBz
dGRvLCBzdGRlID0gZG9fcHJvY2Vzc19pb3MoCiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzcywg
dmVyYm9zZT12ZXJib3NlLAogICAgICAgICAgICAgICAgICAgIHN0ZG91dF9wb3M9c3Rkb3V0X3Bv
cywgc3RkZXJyX3Bvcz1zdGRlcnJfcG9zLAogICAgICAgICAgICAgICAgICAgIHN0ZG91dD1zdGRv
dXQsIHN0ZGVycj1zdGRlcnIpCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMC4wNCkKICAgICAgICAg
ICAgaWYgcmV0Y29kZSBpcyBub3QgTm9uZSBvciBmb3JjZV9yZXRjb2RlIGlzIG5vdCBOb25lOgog
ICAgICAgICAgICAgICAgYnJlYWsKICAgIGV4Y2VwdCAoS2V5Ym9hcmRJbnRlcnJ1cHQsIEV4Y2Vw
dGlvbikgYXMgZXhjOgogICAgICAgIHRyYWNlID0gdHJhY2ViYWNrLmZvcm1hdF9leGMoKQogICAg
ICAgIHByaW50KHRyYWNlKQogICAgICAgIHRyeToKICAgICAgICAgICAgdGVybWluYXRlKHByb2Nl
c3MpCiAgICAgICAgZXhjZXB0IFVuYm91bmRMb2NhbEVycm9yOgogICAgICAgICAgICBwYXNzCiAg
ICAgICAgcmFpc2UgZXhjCiAgICBmaW5hbGx5OgogICAgICAgIGlmIHByb2Nlc3MgaXMgbm90IE5v
bmU6CiAgICAgICAgICAgIHN0ZG91dF9wb3MsIHN0ZGVycl9wb3MsIHN0ZG8sIHN0ZGUgPSBkb19w
cm9jZXNzX2lvcygKICAgICAgICAgICAgICAgIHByb2Nlc3MsIHZlcmJvc2U9dmVyYm9zZSwKICAg
ICAgICAgICAgICAgIHN0ZG91dF9wb3M9c3Rkb3V0X3Bvcywgc3RkZXJyX3Bvcz1zdGRlcnJfcG9z
LAogICAgICAgICAgICAgICAgc3Rkb3V0PXN0ZG91dCwgc3RkZXJyPXN0ZGVycikKICAgICAgICAg
ICAgdHJ5OgogICAgICAgICAgICAgICAgdGVybWluYXRlKHByb2Nlc3MpCiAgICAgICAgICAgIGV4
Y2VwdCBVbmJvdW5kTG9jYWxFcnJvcjoKICAgICAgICAgICAgICAgIHBhc3MKICAgIGlmIGZvcmNl
X3JldGNvZGUgaXMgbm90IE5vbmU6CiAgICAgICAgcmV0Y29kZSA9IGZvcmNlX3JldGNvZGUKICAg
IGlmIHJldGNvZGUgaXMgTm9uZToKICAgICAgICByZXRjb2RlID0gTk9fUkVUQ09ERQogICAgaWYg
cmV0Y29kZSAhPSAwIGFuZCBub3QgZXJyb3I6CiAgICAgICAgZXJyb3IgPSAncHJvZ3JhbSBlcnJv
ciwgY2hlY2sgc3RkIHN0cmVhbXMnCiAgICByZXRjb2RlID0gZm9yY2VfcmV0Y29kZSBvciByZXRj
b2RlCiAgICByZXQgPSB7J3JldGNvZGUnOiByZXRjb2RlLAogICAgICAgICAgICdzdGF0dXMnOiBO
b25lLAogICAgICAgICAgICdlcnJvcic6IE5vbmUsCiAgICAgICAgICAgJ3BpZCc6IHBpZCwKICAg
ICAgICAgICAnY2xpJzogJyAnLmpvaW4oY2xpKSwKICAgICAgICAgICAnc3Rkb3V0Jzogc3Rkb3V0
LmdldHZhbHVlKCksCiAgICAgICAgICAgJ3N0ZGVycic6IHN0ZGVyci5nZXR2YWx1ZSgpfQogICAg
ZmFpbGVkKHJldCwgZXJyb3I9ZXJyb3IpCiAgICBpZiB2ZXJib3NlOgogICAgICAgIHByaW50KGZv
cm1hdF9vdXRwdXRfYW5kX2Vycm9yKHJldCkpCiAgICByZXR1cm4gcmV0CgoKZGVmIGNvbXBsZXhf
anNvbl9vdXRwdXRfc2ltcGxlKHN0cmluZyk6CiAgICAnJycKICAgIEV4dHJhY3QganNvbiBvdXRw
dXQgZnJvbSBzdGRvdXQgKHN0cmluZyBwYXJzZSB2YXJpYW50KQoKICAgIGlmIHN0YXRlcyBnYXJi
bGVkIHRoZSBzdGRvdXQsIGJ1dCB3ZSBzdGlsbCBoYXZlIGEgcmVzdWx0IGxpa2U6OgoKICAgICAg
ICAuLi5jb21tYW5kIGdhcmdhZ2Ugb3V0cHV0Li4uCiAgICAgICAgeyJsb2NhbCI6IHRydWV9Cgog
ICAgd2Ugd2lsbCB0cnkgdG8gcmVtb3ZlIHRoZSBzdGFydGluZyBvdXRwdXQgYW5kIHNvIGV4dHJh
Y3QKICAgIHRoZSByZXN1bHQgZnJvbSB0aGUgb3V0cHV0CiAgICAnJycKICAgIGlmIG5vdCBpc2lu
c3RhbmNlKHN0cmluZywgc2l4LnN0cmluZ190eXBlcyk6CiAgICAgICAgcmV0dXJuIHN0cmluZwog
ICAgcmV0ID0gX21hcmtlcgogICAgZm9yIHBvcywgaSBpbiBlbnVtZXJhdGUoc3RyaW5nKToKICAg
ICAgICBpZiBpID09ICd7JzoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcmV0ID0g
anNvbi5sb2FkcyhzdHJpbmdbcG9zOl0pCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAg
ICBleGNlcHQgVmFsdWVFcnJvcjoKICAgICAgICAgICAgICAgIHBhc3MKICAgIGlmIHJldCBpcyBf
bWFya2VyOgogICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoJ0NhbnQgZXh0cmFjdCBqc29uIG91dHB1
dCcpCiAgICByZXR1cm4gcmV0CgoKZGVmIGNvbXBsZXhfanNvbl9vdXRwdXRfbXVsdGlsaW5lcyhz
dHJpbmcpOgogICAgJycnCiAgICBFeHRyYWN0IGpzb24gb3V0cHV0IGZyb20gc3Rkb3V0IChsaW5l
cyBwYXJzZSB2YXJpYW50KQoKICAgIGlmIHN0YXRlcyBnYXJibGVkIHRoZSBzdGRvdXQsIGJ1dCB3
ZSBzdGlsbCBoYXZlIGEgcmVzdWx0IGxpa2U6OgoKICAgICAgICAuLi5jb21tYW5kIGdhcmdhZ2Ug
b3V0cHV0Li4uCiAgICAgICAgeyJsb2NhbCI6IHRydWV9CgogICAgd2Ugd2lsbCB0cnkgdG8gcmVt
b3ZlIHRoZSBzdGFydGluZyBvdXRwdXQgYW5kIHNvIGV4dHJhY3QKICAgIHRoZSByZXN1bHQgZnJv
bSB0aGUgb3V0cHV0CiAgICAnJycKICAgIGlmIG5vdCBpc2luc3RhbmNlKHN0cmluZywgc2l4LnN0
cmluZ190eXBlcyk6CiAgICAgICAgcmV0dXJuIHN0cmluZwogICAgcmV0ID0gX21hcmtlcgogICAg
bGluZXMgPSBzdHJpbmcuc3BsaXRsaW5lcygpCiAgICBmb3IgcG9zLCBsaW5lIGluIGVudW1lcmF0
ZShsaW5lcyk6CiAgICAgICAgc2xpbmUgPSBtYWdpY3N0cmluZyhsaW5lLnN0cmlwKCkpCiAgICAg
ICAgaWYgc2xpbmUuc3RhcnRzd2l0aCgneycpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAg
ICAgICByZXQgPSBqc29uLmxvYWRzKCcnLmpvaW4oW21hZ2ljc3RyaW5nKGEpCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciBhIGluIGxpbmVzW3BvczpdXSkpCiAg
ICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBleGNlcHQgVmFsdWVFcnJvcjoKICAgICAg
ICAgICAgICAgIHBhc3MKICAgIGlmIHJldCBpcyBfbWFya2VyOgogICAgICAgIHJhaXNlIFZhbHVl
RXJyb3IoJ0NhbnQgZXh0cmFjdCBqc29uIG91dHB1dCcpCiAgICByZXR1cm4gcmV0CgoKZGVmIGNh
bGwoZnVuYywKICAgICAgICAgZXhlY3V0YWJsZT1Ob25lLAogICAgICAgICBhcmdzPU5vbmUsCiAg
ICAgICAgIGxvZ2xldmVsPU5vbmUsCiAgICAgICAgIGNvbmZpZ19kaXI9Tm9uZSwKICAgICAgICAg
c3RkaW49Tm9uZSwKICAgICAgICAgc3Rkb3V0PU5vbmUsCiAgICAgICAgIHN0ZGVycj1Ob25lLAog
ICAgICAgICB0aW1lb3V0PU5vbmUsCiAgICAgICAgIG91dHB1dF9xdWV1ZT1Ob25lLAogICAgICAg
ICB2YWxpZGF0ZV9zdGF0ZXM9Tm9uZSwKICAgICAgICAgcmV0Y29kZV9wYXNzdGhyb3VnaD1Ob25l
LAogICAgICAgICBub19yZXRjb2RlX3Bhc3N0aHJvdWdoPU5vbmUsCiAgICAgICAgIG5vX3F1b3Rl
PU5vbmUsCiAgICAgICAgIHNsZWVwX2ludGVydmFsPU5vbmUsCiAgICAgICAgIGxvY2FsPUZhbHNl
LAogICAgICAgICBvdXQ9Tm9uZSwKICAgICAgICAgbm9fb3V0PU5PX1JFVFVSTiwKICAgICAgICAg
bm9fZGlzcGxheV9yZXQ9Tm9uZSwKICAgICAgICAgcmV0X2Zvcm1hdD1Ob25lLAogICAgICAgICB2
ZXJib3NlPU5vbmUsCiAgICAgICAgIGVudj1Ob25lKToKICAgIGlmIGFyZ3MgaXMgTm9uZToKICAg
ICAgICBhcmdzID0gW10KICAgIGlmIGlzaW5zdGFuY2UoYXJncywgc2l4LnN0cmluZ190eXBlcyk6
CiAgICAgICAgYXJncyA9IHNobGV4LnNwbGl0KGFyZ3MpCiAgICBpZiBvdXQgaXMgTm9uZToKICAg
ICAgICBvdXQgPSAnanNvbicKICAgIGlmIHJldF9mb3JtYXQgaXMgTm9uZToKICAgICAgICByZXRf
Zm9ybWF0ID0gJ2pzb24nCiAgICBpZiB2ZXJib3NlIGlzIE5vbmU6CiAgICAgICAgdmVyYm9zZSA9
IEZhbHNlCiAgICBpZiBub3QgZXhlY3V0YWJsZToKICAgICAgICBleGVjdXRhYmxlID0gJ3NhbHQt
Y2FsbCcKICAgIGlmIHJldGNvZGVfcGFzc3Rocm91Z2ggaXMgTm9uZToKICAgICAgICByZXRjb2Rl
X3Bhc3N0aHJvdWdoID0gVHJ1ZQogICAgaWYgbm9fcmV0Y29kZV9wYXNzdGhyb3VnaCBpcyBOb25l
OgogICAgICAgIG5vX3JldGNvZGVfcGFzc3Rocm91Z2ggPSBGYWxzZQogICAgZWFyZ3MgPSBbXQog
ICAgaWYgbm9fcmV0Y29kZV9wYXNzdGhyb3VnaDoKICAgICAgICByZXRjb2RlX3Bhc3N0aHJvdWdo
ID0gRmFsc2UKICAgIGZvciB0ZXN0LCBhcmdwYXJ0IGluIFsKICAgICAgICAoVHJ1ZSwgW2V4ZWN1
dGFibGVdKSwKICAgICAgICAobG9jYWwsIFsnLS1sb2NhbCddKSwKICAgICAgICAocmV0Y29kZV9w
YXNzdGhyb3VnaCwgWyctLXJldGNvZGUtcGFzc3Rocm91Z2gnXSksCiAgICAgICAgKGNvbmZpZ19k
aXIsIFsnLWMnLCBjb25maWdfZGlyXSksCiAgICAgICAgKGxvZ2xldmVsLCBbJy1sJywgbG9nbGV2
ZWxdKSwKICAgICAgICAob3V0LCBbJy0tb3V0Jywgb3V0XSksCiAgICAgICAgKFRydWUsIFtmdW5j
XSArIGFyZ3MpCiAgICBdOgogICAgICAgIGlmIHRlc3Q6CiAgICAgICAgICAgIGVhcmdzLmV4dGVu
ZChhcmdwYXJ0KQogICAgcmV0ID0gY21kKGFyZ3M9ZWFyZ3MsIGVudj1lbnYsIHRpbWVvdXQ9dGlt
ZW91dCwKICAgICAgICAgICAgICB2ZXJib3NlPXZlcmJvc2UsCiAgICAgICAgICAgICAgbm9fcXVv
dGU9bm9fcXVvdGUsIHNsZWVwX2ludGVydmFsPXNsZWVwX2ludGVydmFsLAogICAgICAgICAgICAg
IHN0ZGluPXN0ZGluLCBzdGRlcnI9c3RkZXJyLCBzdGRvdXQ9c3Rkb3V0KQogICAgZGVjb2RlcnMg
PSB7J2pzb24nOiBqc29uX2xvYWR9CiAgICBlbmNvZGVycyA9IHsnanNvbic6IChsYW1iZGEgeDog
anNvbl9kdW1wKHgsIHByZXR0eT1UcnVlKSl9CiAgICByZXRbJ3NhbHRfZnVuJ10gPSBmdW5jCiAg
ICByZXRbJ3NhbHRfYXJncyddID0gYXJncwogICAgcmV0WydzYWx0X291dCddID0gTm9uZQogICAg
aWYgb3V0IGFuZCBvdXQgaW4gZGVjb2RlcnMgYW5kIHJldC5nZXQoJ3N0ZG91dCcsICcnKToKICAg
ICAgICB0cnk6CiAgICAgICAgICAgIGRvdXQgPSBOb25lCiAgICAgICAgICAgIHRyeToKICAgICAg
ICAgICAgICAgIGRvdXQgPSBkZWNvZGVyc1tvdXRdKHJldFsnc3Rkb3V0J10pCiAgICAgICAgICAg
IGV4Y2VwdCAoS2V5RXJyb3IsIFZhbHVlRXJyb3IpOgogICAgICAgICAgICAgICAgaWYgb3V0ID09
ICdqc29uJzoKICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgICAg
IGRvdXQgPSBjb21wbGV4X2pzb25fb3V0cHV0X211bHRpbGluZXMoCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICByZXRbJ3N0ZG91dCddKQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCAoS2V5
RXJyb3IsIFZhbHVlRXJyb3IpOgogICAgICAgICAgICAgICAgICAgICAgICBkb3V0ID0gY29tcGxl
eF9qc29uX291dHB1dF9zaW1wbGUoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXRbJ3N0
ZG91dCddKQogICAgICAgICAgICAgICAgaWYgZG91dCBpcyBOb25lOgogICAgICAgICAgICAgICAg
ICAgIHJhaXNlCiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoZG91dCwgZGljdCk6CiAgICAgICAg
ICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVfc3RhdGVzIGlzIG5vdCBG
YWxzZSBhbmQKICAgICAgICAgICAgICAgICAgICBmdW5jIGluIFsnc3RhdGUuaGlnaHN0YXRlJywg
J3N0YXRlLnNscyddCiAgICAgICAgICAgICAgICApOgogICAgICAgICAgICAgICAgICAgIHNyYyA9
IGRvX3ZhbGlkYXRlX3N0YXRlcyhkb3V0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICByZXRjb2RlX3Bhc3N0aHJvdWdoPXJldGNvZGVfcGFzc3Rocm91Z2gsCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldGNvZGU9cmV0Wydy
ZXRjb2RlJ10pCiAgICAgICAgICAgICAgICAgICAgaWYgc3JjICE9IDAgYW5kIChyZXRbJ3JldGNv
ZGUnXSA9PSAwKToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0WydyZXRjb2RlJ10gPSBzcmMK
ICAgICAgICAgICAgICAgIGlmIFthIGZvciBhIGluIGRvdXRdID09IFsnbG9jYWwnXToKICAgICAg
ICAgICAgICAgICAgICBkb3V0ID0gZG91dFsnbG9jYWwnXQogICAgICAgICAgICByZXRbJ3NhbHRf
b3V0J10gPSBkb3V0CiAgICAgICAgZXhjZXB0IChLZXlFcnJvciwgVmFsdWVFcnJvcik6CiAgICAg
ICAgICAgICMgbm8ganNvbiBvdXRwdXQgaXMgZXF1aXZhbGVudCBhcyBhIGZhaWxlZCBjYWxsCiAg
ICAgICAgICAgIHJldFsncmV0Y29kZSddID0gTk9SRVRVUk5fUkVUQ09ERQogICAgICAgICAgICBp
ZiBub3QgcmV0WydlcnJvciddOgogICAgICAgICAgICAgICAgcmV0WydlcnJvciddID0gJycKICAg
ICAgICAgICAgcmV0WydlcnJvciddICs9ICdcbmZhaWxlZCB0byBkZWNvZGUgcGF5bG9hZCcKICAg
IHRyeToKICAgICAgICByZXRjb2RlID0gaW50KHJldFsncmV0Y29kZSddKQogICAgZXhjZXB0IFZh
bHVlRXJyb3I6CiAgICAgICAgcmV0Y29kZSA9IDY2NgogICAgcmV0WydyZXRjb2RlJ10gPSByZXRj
b2RlCiAgICBpZiBvdXRwdXRfcXVldWU6CiAgICAgICAgb3V0cHV0X3F1ZXVlLnB1dChyZXQpCiAg
ICBwaWQgPSBvcy5nZXRwaWQoKQogICAgaWYgbm90IG5vX2Rpc3BsYXlfcmV0OgogICAgICAgIGVy
ZXQgPSByZXQKICAgICAgICBpZiByZXRfZm9ybWF0IGluIGVuY29kZXJzOgogICAgICAgICAgICBl
cmV0ID0gZW5jb2RlcnNbcmV0X2Zvcm1hdF0oZXJldCkKICAgICAgICBwcmludCgiX19TQUxUQ0FM
TEVSX1JFVFVSTl97MH0iLmZvcm1hdChwaWQpKQogICAgICAgIHByaW50KGVyZXQpCiAgICAgICAg
cHJpbnQoIl9fU0FMVENBTExFUl9FTkRfUkVUVVJOX3swfSIuZm9ybWF0KHBpZCkpCiAgICByZXR1
cm4gcmV0CgoKZGVmIG1haW4oKToKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2Vy
KCkKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJ2Z1bmMnLCBuYXJncz0xLAogICAgICAgICAgICAg
ICAgICAgICAgICBoZWxwPSdzYWx0IGZ1bmN0aW9uIHRvIGNhbGwnKQogICAgcGFyc2VyLmFkZF9h
cmd1bWVudCgnYXJncycsCiAgICAgICAgICAgICAgICAgICAgICAgIG5hcmdzPWFyZ3BhcnNlLlJF
TUFJTkRFUiwKICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0oJ2Z1bmN0aW9uIGFyZ3VtZW50
cyBhcyB5b3Ugd291bGQgdXNlJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIG9uIGNs
aSB0byBjYWxsIHNhbHQtY2FsbCcpKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLS12YWxpZGF0
ZS1zdGF0ZXMnLAogICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSgnZm9yIHN0YXRlcyBmdW5j
dGlvbiAoc2xzLCBoaWdoc3RhdGUpLCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyBl
eGlzdCB3aXRoIG5vbi0wIHN0YXR1cyBpbiBjYXNlIG9mIGVycm9ycycpLAogICAgICAgICAgICAg
ICAgICAgICAgICBkZWZhdWx0PUZhbHNlLCBhY3Rpb249J3N0b3JlX3RydWUnKQogICAgcGFyc2Vy
LmFkZF9hcmd1bWVudCgnLS1leGVjdXRhYmxlJykKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy1j
JywgJy0tY29uZmlnLWRpcicpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctLXJldC1mb3JtYXQn
KQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLS1sb2NhbCcsCiAgICAgICAgICAgICAgICAgICAg
ICAgIGhlbHA9J3VzZSAtLWxvY2FsIHdoZW4gY2FsbGluZyBzYWx0LWNhbGwnLAogICAgICAgICAg
ICAgICAgICAgICAgICBhY3Rpb249J3N0b3JlX3RydWUnKQogICAgcGFyc2VyLmFkZF9hcmd1bWVu
dCgnLS1yZXRjb2RlLXBhc3N0aHJvdWdoJywgZGVmYXVsdD1Ob25lLAogICAgICAgICAgICAgICAg
ICAgICAgICBhY3Rpb249J3N0b3JlX3RydWUnKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLS1u
by1yZXRjb2RlLXBhc3N0aHJvdWdoJywgZGVmYXVsdD1Ob25lLAogICAgICAgICAgICAgICAgICAg
ICAgICBhY3Rpb249J3N0b3JlX3RydWUnKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLS1vdXQn
LCBkZWZhdWx0PU5vbmUpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctbCcsICctLWxvZ2xldmVs
JykKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy0tdGltZW91dCcsIGRlZmF1bHQ9Tm9uZSwgdHlw
ZT1pbnQpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctLW5vLXF1b3RlJywgYWN0aW9uPSdzdG9y
ZV90cnVlJywgZGVmYXVsdD1GYWxzZSkKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy12JywgJy0t
dmVyYm9zZScsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgICAgIGhl
bHA9KCdpZiBzZXQsIGRpc3BsYXkgY29tbWFuZCBvdXRwdXQgb24gY29uc29sZScpLAogICAgICAg
ICAgICAgICAgICAgICAgICBkZWZhdWx0PUZhbHNlKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgn
LS1uby1kaXNwbGF5LXJldCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9KCdEbyBub3Qg
ZGlzcGxheSB0aGUgZnVsbCByZXR1cm4nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcg
ZnJvbSBwcm9jZXNzIGEgSlNPTiBtZXRhZGF0YXMnKSwKICAgICAgICAgICAgICAgICAgICAgICAg
YWN0aW9uPSdzdG9yZV90cnVlJywgZGVmYXVsdD1GYWxzZSkKICAgIGFyZ3MgPSBwYXJzZXIucGFy
c2VfYXJncygpCiAgICB2b3B0cyA9IHZhcnMoYXJncykKICAgIHZvcHRzWydmdW5jJ10gPSB2b3B0
c1snZnVuYyddWzBdCiAgICByZXR1cm4gY2FsbCgqKnZvcHRzKQoKCmlmIF9fbmFtZV9fID09ICdf
X21haW5fXycgYW5kIG5vdCBvcy5lbnZpcm9uLmdldCgnTk9fUFlFWEVDJyk6CiAgICBzeXMuZXhp
dChtYWluKClbJ3JldGNvZGUnXSkKCg==
"""


def main():
    changed = False
    executable = None
    for i in ['/srv/makina-states/bin/salt-call']:
        if os.path.exists(i):
            executable = i
            break
    msg = ''
    module = AnsibleModule(
        argument_spec=dict(
            loglevel=dict(required=False, default=None, type='str'),
            function=dict(required=True, default=None, type='str'),
            executable=dict(required=False, default=executable, type='str'),
            local=dict(required=False, default=None, type='bool'),
            args=dict(required=False, default=None, type='str'),
            verbose=dict(required=False, default=False, type='bool'),
            timeout=dict(required=False, default=None, type='int'),
            config_dir=dict(required=False, default=None, type='str'),
        )
    )
    sc = SALTCALLER.decode('base64')
    mod = {}
    if sys.hexversion > 0x03000000:
        exec(compile(sc, '<saltcaller_mod>', 'exec'), mod)
    else:
        exec(compile(sc, '<saltcaller_mod>', 'exec')) in mod
    verbose = module.params.get('verbose')
    function = module.params.get('function')
    fkwargs = {'no_display_ret': True,
               'loglevel': module.params.get('loglevel'),
               'timeout': module.params.get('timeout'),
               'local': module.params.get('local'),
               'executable': module.params.get('executable'),
               'config_dir': module.params.get('config_dir'),
               'args': module.params.get('args')}
    for i in [a for a in fkwargs]:
        if fkwargs[i] is None:
            fkwargs.pop(i, None)
    ret = mod['call'](function, **fkwargs)
    if ret.get('salt_out', None) and not verbose:
        ret['stdout'] = '<TRIMMED>'
        if ret['retcode'] == 0:
            ret['stderr'] = '<TRIMMED>'
    if ret['retcode'] == 0:
        module.exit_json(changed=changed, msg=ret)
    else:
        module.fail_json(msg={'msg': 'saltcallerror', 'result': ret})


if __name__ == '__main__':
    main()
# vim:set et sts=4 ts=4 tw=80:
