<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MakinaStates documentation on Makina States</title>
    <link>/index.xml</link>
    <description>Recent content in MakinaStates documentation on Makina States</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <lastBuildDate>Wed, 15 Mar 2017 23:58:39 +0100</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ansible saltcall module</title>
      <link>/usage/ansible/saltcall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/ansible/saltcall/</guid>
      <description>

&lt;h2 id=&#34;saltcall-wrapper&#34;&gt;saltcall Wrapper&lt;/h2&gt;

&lt;p&gt;We developped a &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/ansible/library/saltcall.py&#34;&gt;special
module&lt;/a&gt;
to call saltcall on remote systems.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can use it via ansible:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANSIBLE_TARGETS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; bin/ansible all &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
  -m saltcall -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;function=test.ping&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANSIBLE_TARGETS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; bin/ansible all &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
  -m saltcall -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;function=grains.get args=fqdn&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Or via a playbook like in &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/ansible/plays/saltcall.yml&#34;&gt;our saltcall one&lt;/a&gt; , usable this way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANSIBLE_TARGETS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; bin/ansible-playbook &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
 ansible/plays/saltcall.yml -m saltcall -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;function=test.ping&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;rsquo;s better to use the playbook because it call the makinastates_pillar
role to copy locally on the remote box the pillar computed by the
salt+pillar bridge before executing the salt command.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Salt</title>
      <link>/usage/salt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/salt/</guid>
      <description>

&lt;h2 id=&#34;command-log-level&#34;&gt;Command log level&lt;/h2&gt;

&lt;p&gt;Remember that &lt;code&gt;-lall&lt;/code&gt; refers to the loglevel &lt;strong&gt;all&lt;/strong&gt;.&lt;br/&gt;
You can lower the output level by lowering down to &lt;strong&gt;info&lt;/strong&gt; (&lt;code&gt;-linfo&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&#34;run-a-salt-state&#34;&gt;Run a salt state&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;    bin/salt-call -lall --retcode-passthrough state.sls &amp;lt;STATE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;run-a-salt-function&#34;&gt;Run a salt function&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;    bin/salt-call -lall --retcode-passthrough test.ping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;configure-a-pillar-entry&#34;&gt;Configure a pillar entry&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pillar/pillar.d/myentry.sls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;---
makina-states.foo.bar: bal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ansible</title>
      <link>/usage/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/ansible/</guid>
      <description>

&lt;h2 id=&#34;leaving-localhost&#34;&gt;Leaving localhost&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When you want to execute saltstack states (makina-states) remotly,&lt;br&gt;
here is the prefligh list to do:

&lt;ul&gt;
&lt;li&gt;declare your host in the &lt;code&gt;database.sls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ensure that the target is reachable from ansible&lt;/li&gt;
&lt;li&gt;Bootstrap makina-states on the remote box, via the providen makinastates role&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ansible-wrappers-specifics&#34;&gt;Ansible wrappers specifics&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To use ansible, please use makina-states wrappers and &lt;br/&gt;
&lt;b&gt;never EVER&lt;/b&gt; the ansible original scripts directly.&lt;br/&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you are using the database.sls, we use &lt;strong&gt;&lt;em&gt;environment variables&lt;/em&gt;&lt;/strong&gt; that are specific to makina-states and
tell the ext pillar (local saltstack side) for which environment to gather information for.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ANSIBLE_TARGETS&lt;/code&gt;
    : list of hosts that we will act on. this will limit the scope of
      the ext pillars generation thus you have to set it to speed
      up operations.
&lt;code&gt;ANSIBLE_NOLIMIT&lt;/code&gt;
    : if set, we wont limit the scope of ansible to ANSIBLE_TARGETS&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;exemple 1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANSIBLE_TARGETS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; bin/ansible all -m ping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;exemple 2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/ansible -c &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; -i &lt;span class=&#34;s2&#34;&gt;&amp;quot;localhost,&amp;quot;&lt;/span&gt; all -m ping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;examples-with-salt&#34;&gt;Examples with salt&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Call a state.sls run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANSIBLE_TARGETS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; bin/ansible all -m shell &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    -a salt-call --retcode-passthrough state.sls foobar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;details&#34;&gt;Details&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;See:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/_scripts/ansible&#34;&gt;bin/ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/_scripts/ansible-galaxy&#34;&gt;bin/ansible-galaxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/_scripts/ansible-playbook&#34;&gt;bin/ansible-playbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/_scripts/ansible-wrapper-common&#34;&gt;bin/ansible-wrapper-common&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;We preconfigure in our wrappers a lot of things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loading configuration (roles, playbooks, inventories, plugins) from:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./ansible&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./.ansible&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;makinastates_install_dir&amp;gt;/ansible&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/share/ansible&lt;/code&gt; (depends of the opt, respects the ansible default configuration)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ansible&lt;/code&gt; (depends of the opt, respects the ansible default configuration)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;When &lt;code&gt;ANSIBLE_TARGETS&lt;/code&gt; are set, we will limit the play to them
unless &lt;code&gt;ANSIBLE_NOLIMIT&lt;/code&gt; is set.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;calling-makina-states-s-flavored-ansible-from-another-repository&#34;&gt;Calling makina-states&amp;rsquo;s flavored  ansible from another repository&lt;/h2&gt;

&lt;p&gt;As said previously, we load the current folder (and ./.ansible,
./ansible as well).&lt;br/&gt;
This clever trick will let you can add roles and plays to a specific
repository but also be able to depend on plugins or roles defined in makina-states.&lt;br/&gt;
This mean that you ll be able to call the ansible wrapper FROM your directory where
you have your specific ansible installation and the whole will assemble nicely.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if makina-states is installed in &lt;code&gt;/srv/makina-states&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;your project is installed inside &lt;code&gt;/srv/projects/foo/project&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can create your roles inside &lt;code&gt;/srv/projects/foo/project/ansible/roles&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can make dependencies of any &lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/ansible/roles&#34;&gt;makina-states roles&lt;/a&gt; specially &lt;code&gt;makinastates_pillar&lt;/code&gt; that
deploy the locally gather pillar for a box to the remote if you are
not acting on &lt;code&gt;localhost&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You ll have to call &lt;code&gt;ansible&lt;/code&gt; or &lt;code&gt;ansible-playbook&lt;/code&gt;, do it this way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /srv/projects/foo/project
/srv/makina-states/bin/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;ansible,ansible-playbook&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$args&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;saltcall&#34;&gt;salt call module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Order of operation</title>
      <link>/reference/sumup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/sumup/</guid>
      <description>

&lt;h2 id=&#34;organisation-workflow&#34;&gt;Organisation &amp;amp; Workflow&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;makina-states primarely use salt to deploy on the targeted environment.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Our salt states are thought to be used in a special order,&lt;br/&gt;
and specially when you call salt via the &lt;strong&gt;sls&lt;/strong&gt;: &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/salt/makina-states/top.sls&#34;&gt;&lt;code&gt;makina-states.top&lt;/code&gt;&lt;/a&gt;.

&lt;ul&gt;
&lt;li&gt;We apply first the &lt;a href=&#34;../nodetype&#34;&gt;nodetype&lt;/a&gt; configuration.&lt;/li&gt;
&lt;li&gt;Then, we will apply the &lt;a href=&#34;../controllers&#34;&gt;controllers&lt;/a&gt; configuration.&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;Then, we will apply &lt;a href=&#34;../localsettings&#34;&gt;localsettings&lt;/a&gt; states&lt;/li&gt;
&lt;li&gt;After all of the previous steps, we may configure &lt;code&gt;services&lt;/code&gt; like
sshd, crond, or databases. If we are on the &lt;strong&gt;scratch&lt;/strong&gt; mode, no
services are configured by default.&lt;/li&gt;
&lt;li&gt;Eventually, we may by able to install projects via &lt;code&gt;mc_project&lt;/code&gt;. &lt;br/&gt;
A project is just a classical code repository which has a &amp;ldquo;.salt&amp;rdquo;
and/or ansible playbooks/roles folder commited with enougth
information on how to deploy it.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;registries&#34;&gt;Registries&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The configuration of any of the formulas (nodetypes, controllers, localsettings,
services) is handled via Makina-States &lt;a href=&#34;../registries&#34;&gt;registries&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Makina-States was first using the salt HighState principle of configuring
everything.&lt;/li&gt;
&lt;li&gt;was based at fist on &lt;code&gt;nodetypes presets&lt;/code&gt; that were preselected collections of &lt;a href=&#34;https://docs.saltstack.com/en/latest/topics/tutorials/starting_states.html&#34;&gt;salt states&lt;/a&gt; to apply to the system&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;This is from where the &lt;a href=&#34;https://docs.saltstack.com/en/latest/ref/states/highstate.html&#34;&gt;highstate&lt;/a&gt; will start to run.&lt;/li&gt;
&lt;li&gt;Recently we cutted off this behavior, and now you must apply them explicitly.&lt;br/&gt;
Indeed:

&lt;ul&gt;
&lt;li&gt;highstate tend to grow and when you decide to reapply it you may
accidentaly deliver things you forgotten of.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s long, very long to wait to reapply everything for small changes.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Layout</title>
      <link>/reference/layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/layout/</guid>
      <description>

&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Relative to the top &lt;code&gt;makina-states&lt;/code&gt; clone folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;
 bin/ansible                    -&gt; wrapper to ansible
 bin/ansible-galaxy             -&gt; wrapper to ansible-galaxy
 bin/ansible-playbook           -&gt; wrapper to ansible-playbook
 bin/salt-call                  -&gt; wrapper to salt-call
 ansible/                       -&gt; ansible plays, roles, modules &amp; etc
 etc/                           -&gt; configuration
   etc/ansible/                 -&gt; ansible configuration
   etc/salt/                    -&gt; saltstack configuration
   etc/makina-states/           -&gt; makina-states  configuration
 pillar/                        -&gt; saltstack pillar files
     pillar/pillar.d/           -&gt; saltstack pillar files (global)
     pillar/private.pillar.d/   -&gt; saltstack pillar files
                                  (for the current node)
     pillar/&lt;$minion&gt;.pillar.d/ -&gt; saltstack pillar files
                                  (for a specific minion)
 salt/makina-states/            -&gt; saltstack states
   makina-states/               -&gt; makina-states saltstack states
   salt/_modules/               -&gt; custom salt modules
   salt/_pillar/                -&gt; custom extpillar modules
&lt;/pre&gt;

&lt;h2 id=&#34;salt-pillar&#34;&gt;Salt pillar&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Saltstack configuration is based on pillars.&lt;/li&gt;
&lt;li&gt;To facilitate configuration of the Top file, we added those features:

&lt;ul&gt;
&lt;li&gt;Any &lt;strong&gt;JSON&lt;/strong&gt; file can be used as pillar data.&lt;/li&gt;
&lt;li&gt;Any &lt;strong&gt;SLS/json&lt;/strong&gt; file dropped inside &lt;code&gt;pillar/pillars.d/&lt;/code&gt; will be loaded for all minion as pillar data&lt;/li&gt;
&lt;li&gt;Any &lt;strong&gt;SLS/json&lt;/strong&gt; file dropped inside &lt;code&gt;pillar/private.pillars.d&lt;/code&gt; will be only loaded for the current node of operation.&lt;/li&gt;
&lt;li&gt;Any &lt;strong&gt;SLS/json&lt;/strong&gt; file dropped inside &lt;code&gt;pillar/&amp;lt;$minionid&amp;gt;.pillars.d&lt;/code&gt; will be only loaded for the &amp;ldquo;\$minionid&amp;rdquo; host&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;salt-ansible-bridge-notes&#34;&gt;Salt + Ansible bridge notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Makina-states has better to use an &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/ansible/inventories/makinastates.py&#34;&gt;ansible dynamic inventory&lt;/a&gt;
that bridges the salt pillar with ansible via a salt module:
&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_remote_pillar.py&#34;&gt;mc_remote_plllar&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;This module is pluggable and will search in the salt modules installed
those who have declared special named functions:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;get_masterless_makinastates_hosts()&lt;/code&gt;&lt;/p&gt;

&lt;dl&gt;
&lt;dd&gt;return a list of host to manage&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;get_masterless_makinastates_groups(minionid, pillar)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;return a list of groups for the specific minion id&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;For each host found by all &lt;code&gt;get_masterless_makinastates_hosts&lt;/code&gt; functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get its pillar by calling
&lt;code&gt;mc_remote_pillar.get_pillar($host)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extract/generate from informations in the pillar relevant ansible
host vars for this minion. &lt;strong&gt;saltpillar&lt;/strong&gt; ansible hostvar is the
pillar of this minion.&lt;/li&gt;
&lt;li&gt;Generate ansible groups from those hostvars by calling eac
&lt;code&gt;get_masterless_makinastates_groups&lt;/code&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;By default, we use the &lt;code&gt;mc_pillar&lt;/code&gt; ext pillar which loads a file:
&lt;code&gt;etc/makina-states/database.sls&lt;/code&gt; which describe our infractructure and
this will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;list all nodes that are configured as ansible targets&lt;/li&gt;
&lt;li&gt;generate pillar info for all nodes (and per se fall inside
the ansible inventory of those related hosts.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;custom-extpillar&#34;&gt;Custom extpillar&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In other words, to add your custom way of managing your hosts:

&lt;ul&gt;
&lt;li&gt;Create an ext_pillar to complete the pillar for a specific minion
depending on its &lt;code&gt;minion id&lt;/code&gt; and that&amp;rsquo;s why the easiest way
is to adopt a minionid/hostname naming scheme.&lt;/li&gt;
&lt;li&gt;Create a module that implement the &lt;code&gt;get_masterless_makinastates_hosts&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;get_masterless_makinastates_groups&lt;/code&gt; functions&lt;/li&gt;
&lt;li&gt;register the pillar and module to the local makina-states installation (see bellow)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Take example on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_pillar.py&#34;&gt;module&lt;/a&gt; : (search for &lt;code&gt;get_masterless_makinastates_groups&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;get_masterless_makinastates_hosts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/pillar/mc_pillar.py&#34;&gt;extpillar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To load your extpillar, you ll have to add it to the local salt configuration. &lt;br/&gt;
You can add a file this way&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;$WC/etc/salt/minion.d/99_extpillar.conf&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ext_pillar&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;mc_pillar&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{}&lt;/span&gt;
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;mc_pillar_jsons&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{}&lt;/span&gt;
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;mycustompillar&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To load your custom module, place it under &lt;code&gt;$WC/salt/_modules&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To load your custom pillar, place it under &lt;code&gt;$WC/salt/_pillar&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;verify-the-pillar-for-a-minion&#34;&gt;Verify the pillar for a minion&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call mc_remote_pillar.get_pillar &amp;lt;minion_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;verify-the-groups-for-a-minion&#34;&gt;Verify the groups for a minion&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call mc_remote_pillar.get_groups &amp;lt;minion_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;optional-add-a-cron-to-speed-up-pillar-generation&#34;&gt;(OPTIONAL) Add a cron to speed up pillar generation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To generate regularly the cron for all the configured minion, to speed
up regular ansible calls (the pillar will already be cached at the call
time), you can register a cron that does that.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;/etc/cron.d/refresh_ansible&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
15,30,45,00 * * * * root /srv/makina-states/_scripts/refresh_makinastates_pillar.sh
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>database.sls</title>
      <link>/reference/databasesls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/databasesls/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;For configuring a single machine, you can rely on a local crafted pillar,
but to operate on a cluster, it would be a lot more cumbersome and not &lt;strong&gt;DRY&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Fir this we created &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_pillar.py&#34;&gt;&lt;code&gt;mc_pillar&lt;/code&gt;&lt;/a&gt;, an ext_pillar that describe a whole
cluster infrastructure from a single &lt;strong&gt;SLS&lt;/strong&gt; file.&lt;/li&gt;
&lt;li&gt;This special file, &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/etc/makina-states/database.sls.in&#34;&gt;&lt;code&gt;etc/makina-states/database.sls&lt;/code&gt;&lt;/a&gt;. will
describe our infrastructure and specially how to access to the remote
systems.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;At first, you will need to copy &lt;code&gt;etc/makina-states/database.sls.in&lt;/code&gt; which is a sample, and adapt it to your needs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;cp etc/makina-states/database.sls.in &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
      etc/makina-states/database.sls
&lt;span class=&#34;nv&#34;&gt;$EDITOR&lt;/span&gt; etc/makina-states/database.sls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;The contents of the file is mostly self explainatory.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;This file is then parsed by the &lt;strong&gt;mc_pillar module&lt;/strong&gt; (called via an
extpillar hook) to get the appropriate pillar for a specific minion id.
This pillar aims to grab a good part of its system configuration from backups to
ssl, to cloud configuration and so on.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;We heavyly rely on memcached to improve the performance, so first please
install it this way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call -lall state.sls makina-states.services.cache.memcached
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;verify-the-pillar-for-a-minion-after-a-database-sls-change&#34;&gt;Verify the pillar for a minion after a database.sls change&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;service memcached restart
bin/salt-call mc_pillar.ext_pillar &amp;lt;minion_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Manage ssl certificates</title>
      <link>/topics/ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/topics/ssl/</guid>
      <description>

&lt;h2 id=&#34;general-use&#34;&gt;General use&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Management is done via the pillar, and via the &lt;strong&gt;makina-states.localsettings.ssl&lt;/strong&gt; sls.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After configuration, apply it to your system via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call -l all state.sls makina-states.localsettings.ssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Or via ansible (remote host)::&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANSIBLE_TARGETS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$hostname&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; bin/ansible-playbook &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    ansible/plays/saltcall.yml -e saltargs makina-states.localsettings.ssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;add-a-certificate-to-the-system-trust-system-add-a-ca&#34;&gt;Add a certificate to the system trust system (add a &amp;lsquo;ca&amp;rsquo;)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;pillar/pillar.d/cert.sls&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#                                   &amp;lt;CN&amp;gt;&lt;/span&gt;
&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.localsettings.ssl.cas.foobar&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;-----BEGIN CERTIFICATE-----&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;MIIDejCCAmKgAwIBAgICA+gwDQYJKoZIhvcNAQELBQAwfzELMAkGA1UEBhMCRlIx&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;DDAKBgNVBAgMA1BkTDEPMA0GA1UEBwwGTmFudGVzMRYwFAYDVQQKDA1NYWtpbmEg&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;Q29ycHVzMQ8wDQYDVQQDDAZmb29iYXIxKDAmBgkqhkiG9w0BCQEWGWNvbnRhY3RA&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;bWFraW5hLWNvcnB1cy5jb20wIBcNMTYwNTA0MTA0NjAzWhgPMzAzNDExMDQxMDQ2&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;MDNaMH8xCzAJBgNVBAYTAkZSMQwwCgYDVQQIDANQZEwxDzANBgNVBAcMBk5hbnRl&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;czEWMBQGA1UECgwNTWFraW5hIENvcnB1czEPMA0GA1UEAwwGZm9vYmFyMSgwJgYJ&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;KoZIhvcNAQkBFhljb250YWN0QG1ha2luYS1jb3JwdXMuY29tMIIBIjANBgkqhkiG&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnLYWB4f9lRVc/fbqOvOCNTCefWnNwKehyf9z&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;LKzZ93ki5bHYLKUoI7tWK2UOKNbnADhEfgGiWNcGtdrr9wc4FFLFR43tUfIxMfqe&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;wUcsv06V9IsmIP4Pi+knAPZG5fXystlPfLjom4bCx5mQr2SGIijw2ogYHKAIdgZJ&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;rviDWM2XIbdEx0TIqkOAokKqUtDr8ZEG289P5v5mrHjacAC8GzhxCgg1RWmaJOhW&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;jc6bfdgLEOQCwt3hE92r+qrh0JjxBINVLE6IO8dL1jGxN8O+U/sQdhDvuN1bwyXd&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;8117+FSP8C+nnOK37MI27qv0D+sEZXZXAdEAY6w0WF4EAuY/kwIDAQABMA0GCSqG&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;SIb3DQEBCwUAA4IBAQBHG6MkNhaeXWqMqzcYmLWZQZ6hONfRaK7lZlKmly6yVzLJ&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;Y6v5wPMtWDzE0ALS0K2nhG4dEuEo1D1/dQhdz+zmJC5+xVnCzzWIxfNs0GgQMTVj&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;eEmp3Hl0QBwe66swFaMKPz9+1eiQKaTE4pcwOXGEFwephaJWkswX4Fw0o9CA7NLl&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;z0uIpHB12tcGlxS7joraj6aV4nKj+T3xVzsQqR2x5jbZMzsn/1W4afeSKZkBWiNI&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;Z1cASST8OvDiBkQna7LNqDVfogezK0h/8Wbqp5dipeNIY9xu/L4Hr9+Djb9mOwp+&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;gKtKM4seNltkeKgYrupAUecK3Rs+xiF9j5xiv2X1&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;-----END CERTIFICATE-----&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;add-a-certificate-and-it-s-key-for-reuse-in-makina-states-packages-applications&#34;&gt;Add a certificate and it&amp;rsquo;s key for reuse in makina-states packages applications&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The certicate can be either a selfsigned certificate or a certificate and its
authority chain with the certificate itself comes first&lt;/li&gt;
&lt;li&gt;pillar/pillar.d/cert.sls&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#                                            &amp;lt;CN&amp;gt;&lt;/span&gt;
&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.localsettings.ssl.certificates.titi&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
 &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;-----BEGIN CERTIFICATE-----&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;MIIDdjCCAl6gAwIBAgICA+gwDQYJKoZIhvcNAQELBQAwfTELMAkGA1UEBhMCRlIx&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;DDAKBgNVBAgMA1BkTDEPMA0GA1UEBwwGTmFudGVzMRYwFAYDVQQKDA1NYWtpbmEg&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;Q29ycHVzMQ0wCwYDVQQDDAR0aXRpMSgwJgYJKoZIhvcNAQkBFhljb250YWN0QG1h&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;a2luYS1jb3JwdXMuY29tMCAXDTE2MDUwNDExMDcxNFoYDzMwMzQxMTA0MTEwNzE0&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;WjB9MQswCQYDVQQGEwJGUjEMMAoGA1UECAwDUGRMMQ8wDQYDVQQHDAZOYW50ZXMx&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;FjAUBgNVBAoMDU1ha2luYSBDb3JwdXMxDTALBgNVBAMMBHRpdGkxKDAmBgkqhkiG&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;9w0BCQEWGWNvbnRhY3RAbWFraW5hLWNvcnB1cy5jb20wggEiMA0GCSqGSIb3DQEB&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;AQUAA4IBDwAwggEKAoIBAQDMRnNmGHdSfjmv/HQSLKQ0aIhukNQJP1/pVYfoHN/X&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;BE5pbbM3voZaecq5puJV1CAojYO9XkIY6FFOQnXbr+285ectuTHFHGTQpw/cEtUd&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;uHR7SXdhcfFOMw2og/WcdiOj5+WqEkm5hsT5QWMFTYQxXsRtwWVxx9JzBSStPpzi&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;aJ1bfg51F+iEFvnkAsYN6++CAGp93pKNhKKyPx52fiiSwVH5+7Iouw5BzX68DQK5&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;1i2YoHDRKdZmBJ/wVUgISsuHEf4JhKMfyiQWvfjqNL5FQx4nEnhHbcrYr+/h/2+A&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;7IdscdbpQa4mKK6+5B9EIjR/c/6LKmXhaQuNwg+UaP9JAgMBAAEwDQYJKoZIhvcN&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;AQELBQADggEBAB/egp+ifuMfl7tFiRiO95QeIu6YLNSs6l2ZQ8uHSqlQ6/8GSq/J&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;C1vt/yy4nPZ/14AonlIxWiKMH/1I96Y7W/8KZ5v9DbYsjGwO1TwqNxsqxjjMlW4g&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;Qb1L4vnAq+25HhX0M1xiJWErgPfzMCVTyOhhuVaIPVTZUBhN5GsVtzuzeC4Vpg1O&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;wAhBRgbyi9gxdWoxeaujColAoiwBYgLt6d+jg7I7RSYvd6bIixc00G0J4zY0d8jB&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;ztK3UXbf4G0Bt7R/DcyZ0Tsp51+d5vpD+UjKkpijwhDkUGNC1ljD5M95NlmbCPdp&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;5ODKbWRuHLcUyzEAjzplwC6FpAlvN11SanA=&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;-----END CERTIFICATE-----&lt;/span&gt;
 &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;-----BEGIN PRIVATE KEY-----&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMRnNmGHdSfjmv&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;/HQSLKQ0aIhukNQJP1/pVYfoHN/XBE5pbbM3voZaecq5puJV1CAojYO9XkIY6FFO&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;QnXbr+285ectuTHFHGTQpw/cEtUduHR7SXdhcfFOMw2og/WcdiOj5+WqEkm5hsT5&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;QWMFTYQxXsRtwWVxx9JzBSStPpziaJ1bfg51F+iEFvnkAsYN6++CAGp93pKNhKKy&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;Px52fiiSwVH5+7Iouw5BzX68DQK51i2YoHDRKdZmBJ/wVUgISsuHEf4JhKMfyiQW&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;vfjqNL5FQx4nEnhHbcrYr+/h/2+A7IdscdbpQa4mKK6+5B9EIjR/c/6LKmXhaQuN&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;wg+UaP9JAgMBAAECggEAPkn9RlSPjggPbyp7+k7Cg3icoZpoDanVhUEfgBfN6bLW&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;di+NRqJCNbSNrK7GtYVJiRQd59CmNxIgOMzrQ2ISDFfOdpLSKljOJRHMND9J3RYx&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;7qYoUP59pmrK72fNrTgZBhHgZkvNT1VZGuhlWWiZtrQ/EXi3hkp4UbpvxKQjEqZn&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;o2+vbUYh440dKdw+iJnDAYZi/1yFCqiIxkWUSFFky8gjppQ7CBeQ4LEHKPodd4A2&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;ccnK8op6H5n26Xqdi65G0SR+X39xtEGp8pzUQW8XaXCjEtBNhD95ymGXEmq8KfqG&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;XcN6nBMVp5V9X4+xFg2hBsFPsL6xrT7deASBKyDQAQKBgQD9VG8okA1rd11ttyvi&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;DhIV6PlYBxhEex4lGeqOrjETKMsAFDsJ5Ntlr3MiXiLIuQ0pAcu3tpxNEkTLkcHo&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;e0VpP7HCr14vnCpZyB1B8wTmbBJVMXkD+oaN7pzEJhauaombfDRH4NKd87lgveLG&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;3x/CFHdJfEvxwjRdpER+ZxJvIQKBgQDObaa9WcyZnuB7R109TTiZgSGo1XljF1m9&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;Ji+85sSdV1mHnUyghgszbnW5s8dM1sweY5ZAONFsF9j06iL2h1XnGlgKHBL22UGH&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;o5nc5/oHfuc/YmRdSUCgmwSZixrInFjfvUiE/tR/j4z2AnpEB4/8genEm+elXYIE&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;uodJpj3TKQKBgQChY+FNXjiudmU3OLLkWUJ8Yug3hI2ZUzZpPJGKRL9PDXYGntzd&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;+MctiRE4m/BdIEeaEGLQr630C+d4KWv3yFD4NHPzK/Y9LqhsemjpUwGUKtWjINmQ&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;B1MhqRqGfB2HEKiKPh6wjDKiHlvDnjWTrSJ2asN0NZPMeYUTA0v/m3rLAQKBgFJZ&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;K8sdp6Eg4CxNq8RoqcuS1/qiLmp5RjNOqHyTEpwx3GVdOtROpOk/h3ctYLQmfAcj&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;cyzrfZ/BY6tQO+Jc2sf2mmhuCqKuyJVzjk2xvOyAk3+VoLQWJNHtBUi7VVPyCwI2&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;YFet0NeSTIlXM68v1SDGMptcFmzBgLyiLJYU21UBAoGBAIhSvpsw3z/gAf9nbciZ&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;9puJiPqFBld7DrCp69iaD/ryXzLfzwI3bzWR8M8TuBO6DxApiYx7Zps4QabPQZTN&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;U4UFg0AcdRh27OUXYtGENw7W0ssZKhlII78WB+0haAwe+kQJ4aNpF0eqWXLH7thR&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;zKKdzi+lMlG5NimeR246wBvX&lt;/span&gt;
   &lt;span class=&#34;no&#34;&gt;-----END PRIVATE KEY-----&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;add-certificates-via-the-makina-states-ext-pillar&#34;&gt;Add certificates via the makina-states ext_pillar&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When using mc_pillar deployment, edit your local &lt;strong&gt;etc/makina-states/database.sls&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Take an example on the &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/etc/makina-states/database.sls.in&#34;&gt;database.sl&lt;/a&gt; &lt;strong&gt;ssl&lt;/strong&gt; &amp;amp; &lt;strong&gt;ssl_certs&lt;/strong&gt; section.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;ssl_certs&lt;/strong&gt; section is a mapping id / tuples of (certicate, key) mappings.
certicate can be either a selfsigned certificate or a certificate and all the
authority, where the certificate of the common name comes first.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;ssl&lt;/strong&gt; section is where you will map certificates described in the
&lt;strong&gt;ssl_certs&lt;/strong&gt; section to a particular minion id.
Remember that the special &lt;strong&gt;default&lt;/strong&gt; section has the purpose to map certificate
to any minion&lt;/li&gt;
&lt;li&gt;You can add either certificates for a host by specifying them by the &lt;strong&gt;id&lt;/strong&gt; index or
configure infra wide certs by setting them in the &lt;strong&gt;default&lt;/strong&gt; section.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reconfigure-the-ssl-system&#34;&gt;Reconfigure the SSL system&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call -lall state.sls makina-states.localsettings.ssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;use-the-ssl-macro-in-a-state-to-register-a-certificate&#34;&gt;Use the ssl macro in a state to register a certificate&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This add the certificate inside the cloud ssl directories&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Then also may add it to the systemwide ssl trust&lt;br/&gt;
foo.sls:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-jinja&#34; data-lang=&#34;jinja&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;makina-states/localsettings/ssl/macros.jinja&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ssl&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with context&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;%}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ssl.install_certificate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;cert_string&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;[,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;cert_key_string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;[,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;trust&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Parameters:&lt;/p&gt;

&lt;p&gt;cert_string
    : either a certificate string (full certificate in PEM format)
      or a path to load a certificate in PEM format
      or a key inside the mc_ssl.settings.certificates regitry
      (if you need an authority chain, place the certificate first)&lt;/p&gt;

&lt;p&gt;cert_key_string (optional)
    : in case of cert_string is neither a certificate inline or a certificate
      filepath, this will lookup inside the pillar for a matching certificate
      inside the mc_ssl.settings.certificates key.&lt;/p&gt;

&lt;p&gt;trust (optional)
    : boolean to tell to register the certificate to the
      system-wide ssl trusted certe&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Registries &amp; Configuration</title>
      <link>/reference/registries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/registries/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;We needed a way, in our &lt;strong&gt;salt&lt;/strong&gt; states:

&lt;ul&gt;
&lt;li&gt;To deduplicate the cumbersome handling of variables&lt;/li&gt;
&lt;li&gt;To make cleaner jinja code&lt;/li&gt;
&lt;li&gt;For a configuration knob, aggregate values from difference sources, by precedence.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For this, we decided to abstract this in python code&lt;/li&gt;

&lt;li&gt;&lt;p&gt;So, a &lt;strong&gt;registry&lt;/strong&gt; in the Makina-States vocabulary is a
&lt;a href=&#34;https://docs.saltstack.com/en/latest/ref/modules/&#34;&gt;salt execution module&lt;/a&gt; that returns a python dictionnary:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;containing various configuration knobs&lt;/li&gt;
&lt;li&gt;with &lt;strong&gt;sane defaults&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;overridable at will by the user via the &lt;strong&gt;pillar&lt;/strong&gt; or the &lt;strong&gt;grains&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The idea was then to use dedicated saltstack execution modules to provide
a way to have dictionnaries of data aggregated with this precedence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pillar (&lt;strong&gt;&lt;strong&gt;pillar&lt;/strong&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Grains (&lt;strong&gt;&lt;strong&gt;grains&lt;/strong&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Configuration of the minion (&lt;strong&gt;&lt;strong&gt;opts&lt;/strong&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Configuration of the minion (&lt;strong&gt;&lt;strong&gt;opts&lt;/strong&gt;[&amp;lsquo;master]&amp;rsquo;]&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Exemples:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_apache.py&#34;&gt;mc_apache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_nginx.py&#34;&gt;mc_nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_mysql.py&#34;&gt;mc_mysql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Those registries rely on an heavily used function &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_utils.py#L681&#34;&gt;&lt;code&gt;mc_utils.default&lt;/code&gt;&lt;/a&gt; that will do the job of gathering for the &lt;code&gt;configuration prefix&lt;/code&gt; all the knobs
from the various pieces of data we want (pillar, grains, opts)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Thus, by example, you want to install the mysql service:&lt;br&gt;
You will use this sls:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;  bin/salt-call -linfo --retcode-passthrough &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    state.sls makina-states.servies.db.mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reading the code of &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/salt/makina-states/services/db/mysql/configuration.sls#L11&#34;&gt;mysql formula&lt;/a&gt;, you see that it calls &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_mysql.py#L157&#34;&gt;mc_mysql&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To override the &lt;code&gt;port&lt;/code&gt; (default: 3306), you can do this in the pillar
or the grains those ways&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flat Method(preferred): &lt;strong&gt;pillar/pillar.d/mysql.sls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.services.db.mysql.port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;3306&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Nested Method: &lt;strong&gt;pillar/pillar.d/mysql.sls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.services.db.mysql&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;3306&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Haproxy</title>
      <link>/topics/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/topics/haproxy/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;the formula is in &lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/proxy/haproxy&#34;&gt;salt/makina-states/services/proxy/haproxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;idea&#34;&gt;Idea&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We provide a facility to auto configure HTTP/HTTPS/REDIS/TCP backends
via the informations that we can discover in the pillar.&lt;/li&gt;
&lt;li&gt;We want in an future iteration to add a discovery mecanism, maybe via
the mine or a discovery service like ETCD, zookeeper or consul.&lt;/li&gt;
&lt;li&gt;The subkey for configuring proxies is the
&lt;code&gt;makina-states.haproxy_registrations&lt;/code&gt; top dictionnary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;how-to-use&#34;&gt;How to use&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Extra HAPROXY configuration can be done by overriding the default
registry, &lt;strong&gt;mc_haproxy.settings&lt;/strong&gt; via the
&lt;strong&gt;makina-states.services.proxy.haproxy&lt;/strong&gt; prefix as usual.&lt;/li&gt;
&lt;li&gt;Look available tweaks by calling &lt;code&gt;salt-call mc_haproxy.settins&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After, add &lt;code&gt;makina-states.haproxy_registrations.*&lt;/code&gt; entries to
add proxies.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ssl is used and reused from &lt;strong&gt;makina-states.localsettings.ssl&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;First, activate haproxy and run the states a first time:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call -lall state.sls makina-states.services.proxy.haproxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most complete form to register a minion with haproxy is as follow&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.&amp;lt;arbitrar id&amp;gt;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;&amp;lt;local_ip of backend&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;&amp;lt;frontend_port&amp;gt;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;to_port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;&amp;lt;dest_port&amp;gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# optional, default to &amp;lt;frontend_port&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;&amp;lt;http/https/tcp/tcps/redis&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&amp;lt;hosts_to_proxy_from&amp;gt;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# only useful on http(s) mode&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;regexes&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&amp;lt;hosts_to_proxy_from&amp;gt;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# only useful on http(s) mode&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;wildcards&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&amp;lt;hosts_to_proxy_from&amp;gt;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# only useful on http(s) mode&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This declaration will help on the haproxy minion side be to configure
appropriate haproxy &lt;strong&gt;frontends&lt;/strong&gt; and &lt;strong&gt;backends&lt;/strong&gt; objectds.&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;ip&lt;/code&gt; is the local ip of the minion to proxy requests to&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Frontends is a dictionnary of &lt;strong&gt;ports / metadata&lt;/strong&gt; describing how
to configure haproxy to proxy to the minion:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;mode&lt;/code&gt; is node the &lt;strong&gt;haproxy&lt;/strong&gt; mode but a switch for us to
know how to proxy requests.&lt;/p&gt;

&lt;p&gt;http/https&lt;/p&gt;

&lt;dl&gt;
&lt;dd&gt;Proxy HTTP(s) requests, depending on an additionnal
&lt;strong&gt;regexes/wildcards/hosts&lt;/strong&gt; knob
regexes

&lt;dl&gt;
&lt;dd&gt;list of regexeses to match in the form
[host_regex, PATH_URI_regex]
wildcards&lt;/dd&gt;
&lt;dd&gt;list to strings which insensitive match if the
header &lt;code&gt;HOST&lt;/code&gt; endswith
hosts&lt;/dd&gt;
&lt;dd&gt;list to strings which insensitive match exactly
the header &lt;code&gt;HOST&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;/dd&gt;
&lt;dt&gt;tcp/tcps&lt;/dt&gt;
&lt;dd&gt;configure a tcp based proxy, here
&lt;strong&gt;regexes/wildcards/hosts&lt;/strong&gt; is useless. Be warn,
&lt;strong&gt;main_cert&lt;/strong&gt; will be the served ssl certicated as no
SNI is possible
redis&lt;/dd&gt;
&lt;dd&gt;configure a redis frontend (tcp based, so also no use
of &lt;strong&gt;regexes/wildcards/hosts&lt;/strong&gt;) based on
&lt;a href=&#34;https://support.pivotal.io/hc/en-us/articles/205309388-How-to-setup-HAProxy-and-Redis-Sentinel-for-automatic-failover-between-Redis-Master-and-Slave-servers&#34;&gt;https://support.pivotal.io/hc/en-us/articles/205309388-How-to-setup-HAProxy-and-Redis-Sentinel-for-automatic-failover-between-Redis-Master-and-Slave-servers&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;to_port&lt;/code&gt; can be used to override the port to proxy on the
minion side if it is not the same that on haproxy side&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If &lt;code&gt;frontends&lt;/code&gt; are not specificied, you need to specify
&lt;strong&gt;ip&lt;/strong&gt; and one of &lt;strong&gt;hosts/regexes/wildcards&lt;/strong&gt; as we default
to configure http &amp;amp; https proxies.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If &lt;code&gt;frontends&lt;/code&gt; are specified, you need to respecify all of
them, no default will be used in this case.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;80 &amp;amp; 443 frontend port modes default to respectivly http &amp;amp; https.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;By default, if no frontends are specified, we setup http &amp;amp; https
frontends. The SSL backend will try for forward first on 443, then
on 80.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Acls order for http mode is not predictible yet and will be
difficult. Prefer to use a sensible configuration for your case
rather than complicating the ACLS generation algorythm.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;proxy&#34;&gt;proxy&lt;/h3&gt;

&lt;p&gt;If we have a minion haproxy1 and want to proxy to myapp2-1 on http &amp;amp;
https when a request targeting &amp;ldquo;www.super.com&amp;rdquo; arrise. all we have to do
is to&lt;/p&gt;

&lt;p&gt;in haproxy1 pillar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haproxy1&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;www.super.com&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;wildcard&#34;&gt;wildcard&lt;/h3&gt;

&lt;p&gt;Wilcards are also supported via the wildcards key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haproxy1&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;wildcards&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;*.www.super.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;regex&#34;&gt;regex&lt;/h3&gt;

&lt;p&gt;regex is also supported via the regexes key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haproxy1&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;regexes&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;my.*supemyappost.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;^/api&amp;#39;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;if we want to proxy http to port &amp;ldquo;81&amp;rdquo; of myapp2-1 &amp;amp; https to 444&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haproxy1&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;www.super.com&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;to_port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;81&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;to_port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;redis&#34;&gt;redis&lt;/h3&gt;

&lt;p&gt;We have a special redis mode to do custom health checks on a redis cluster&lt;/p&gt;

&lt;p&gt;Short form if you use the default port on both ends:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haredis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# localip of myapp2-1&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;6378&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;p p-Indicator&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;long-forms&#34;&gt;Long forms&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haredis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;66378&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;to_port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;666&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;6378&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;redis-auth-is-supported-this-way&#34;&gt;Redis auth is supported this way&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haredis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;6378&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;foobar&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;rabbitmq&#34;&gt;rabbitmq&lt;/h3&gt;

&lt;p&gt;We have a special rabbitmq mode to set sane options on backend for
rabbitmq Short form if you use the default port on both ends:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haredis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;5672&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;p p-Indicator&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Long forms&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.haredis&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10.0.3.14&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;frontends&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;55672&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;to_port&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;333&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;rabbitmq&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;5672&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;rabbitmq&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;register-2-backends-for-one-same-frondend&#34;&gt;Register 2 backends for one same frondend&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.mc_cloud_http1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;10.5.5.2&amp;quot;&lt;/span&gt;
     &lt;span class=&#34;s&#34;&gt;&amp;quot;hosts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;es2.devhost5-1.local&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
     &lt;span class=&#34;s&#34;&gt;&amp;quot;frontends&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
       &lt;span class=&#34;s&#34;&gt;&amp;quot;80&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
         &lt;span class=&#34;s&#34;&gt;&amp;quot;mode&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;
&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-states.haproxy_registrations.mc_cloud_http2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;10.5.5.666&amp;quot;&lt;/span&gt;
     &lt;span class=&#34;s&#34;&gt;&amp;quot;hosts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;es2.devhost5-2.local&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
     &lt;span class=&#34;s&#34;&gt;&amp;quot;frontends&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
       &lt;span class=&#34;s&#34;&gt;&amp;quot;80&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
         &lt;span class=&#34;s&#34;&gt;&amp;quot;mode&amp;quot;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Nodetypes</title>
      <link>/reference/nodetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/nodetypes/</guid>
      <description>

&lt;h3 id=&#34;nodetypes&#34;&gt;Nodetypes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Your choice for &lt;code&gt;nodetype&lt;/code&gt; is one of:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scratch (default)&lt;/strong&gt;
 :   only manage the ansible/salt installation and configuration.&lt;br/&gt;
     You ll want to activate this mode if you want
     to apply explicitly your states without relying of default
     nodetypes configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;server&lt;/strong&gt;
 :   matches a baremetal server, and manage it
     from end to end (base packages, network, locales, sshd, crond,
     logrotate, etc, by default)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vm&lt;/strong&gt;
 :   VM (not baremetal), this is mostly like &lt;strong&gt;server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lxccontainer&lt;/strong&gt;
 :   matches a lxc container mostly like &lt;strong&gt;server&lt;/strong&gt;
     but install and fix lxc boot scripts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;laptop&lt;/strong&gt;
 :   mostly like &lt;strong&gt;server&lt;/strong&gt; but also install packages for
     working on a developement machine (prebacking a laptop for
     a dev&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dockercontainer&lt;/strong&gt;
 :   matches a VM (not baremetal), this is
     mostly like &lt;strong&gt;server&lt;/strong&gt;, but install &amp;amp; preconfigure circus to
     manage daemons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;devhost&lt;/strong&gt;
 :   development machine enabling
     states to act on that, by example installation of a test
     local-loop mailer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vagrantvm&lt;/strong&gt;
 :    flag vagrant boxes and is a subtype of devhost&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can tell &lt;a href=&#34;/usage/&#34;&gt;&lt;code&gt;boot-salt2.sh&lt;/code&gt;&lt;/a&gt; which nodetype to use via the &lt;code&gt;--nodetype&lt;/code&gt; switch&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;boot-salt2.sh --nodetype server --reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;switching-to-another-nodetype-on-an-already-installed-environment&#34;&gt;Switching to another nodetype on an already installed environment&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you installed the &lt;strong&gt;scratch&lt;/strong&gt; preset and want to switch to another preset:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call state.sls makina-states.nodetypes.&amp;lt;your_new_preset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you installed a preset and want to switch to another preset:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;edit &lt;code&gt;etc/makina-states/nodetype&lt;/code&gt; and put your new preset&lt;/li&gt;
&lt;li&gt;edit &lt;code&gt;etc/makina-states/nodetypes.yaml&lt;/code&gt; and set to false your old preset&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ask bootsalt to remember&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;boot-salt2.sh --nodetype &amp;lt;your_new_preset&amp;gt; --reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call state.sls makina-states.nodetypes.&amp;lt;your_new_preset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>/reference/projects/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/projects/usage/</guid>
      <description>

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A project in &lt;strong&gt;corpus / makina-states&lt;/strong&gt; is a &lt;strong&gt;git repository&lt;/strong&gt; checkout
which contains the code and &lt;br/&gt;
a well known saltstack based procedure
to deploy it from end to end in the &lt;strong&gt;.salt&lt;/strong&gt; folder.&lt;/li&gt;
&lt;li&gt;Bear in mind the &lt;a href=&#34;/reference/projects/usage/#structure&#34;&gt;project layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You may have a look to the (now outdatedà original &lt;a href=&#34;/reference/projects/RFC/&#34;&gt;project_corpus&lt;/a&gt; specification&lt;/li&gt;
&lt;li&gt;A good sumup of the spec is as follow:

&lt;ul&gt;
&lt;li&gt;There is a separate repo distributed along the project named
&lt;strong&gt;pillar&lt;/strong&gt; to store configuration variables, passwords and so on.&lt;/li&gt;
&lt;li&gt;Projects are deployed via instructions based on saltstack which
are contained into the &lt;strong&gt;.salt&lt;/strong&gt; folder along the codebase.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Projects can be deployed in two modes:

&lt;ul&gt;
&lt;li&gt;via a git push on a local, separated git repository where some hooks are wired to launch the deployment&lt;/li&gt;
&lt;li&gt;If no remotes, deploy the code source we have locally&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The deployment folder, &lt;code&gt;.salt&lt;/code&gt;, that you will provide along your codebase will describe how to deploy your project.

&lt;ul&gt;
&lt;li&gt;Deployment consist in &lt;code&gt;META&lt;/code&gt; deployment phases:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;archive&lt;/strong&gt; &lt;code&gt;.salt/archive.sls&lt;/code&gt;: synchronnise the project to the &lt;code&gt;archive&lt;/code&gt; folder before deploying&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sync code&lt;/strong&gt; from remotes if there are remotes: if any remotes, synchronise both the pillar and the project
git folder to their corresponding checkouted working copies&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sync/install custom salt modules&lt;/strong&gt; (exec, states, etc) from the codebase if any from the &lt;code&gt;.salt&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fixperms&lt;/strong&gt; (&lt;code&gt;.salt/fixperms.sls&lt;/code&gt;): enforce filesystem permissions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;install&lt;/strong&gt; (&lt;code&gt;.salt/install.sls&lt;/code&gt;): Run project deployment procedure

&lt;ul&gt;
&lt;li&gt;Run any &lt;code&gt;sls&lt;/code&gt; in the &lt;code&gt;.salt&lt;/code&gt; folder (alphanum sorted) which:

&lt;ul&gt;
&lt;li&gt;Is not a main procedure sls&lt;/li&gt;
&lt;li&gt;Is not a task (beginning with &lt;code&gt;task&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;the convention is to name them &lt;code&gt;\d\d\d_NAME.sls&lt;/code&gt;  (&lt;code&gt;000_prereqs.sls&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fixperms&lt;/strong&gt; (&lt;code&gt;.salt/fixperms.sls&lt;/code&gt;): enforce filesystem permissions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rollback&lt;/strong&gt; (&lt;code&gt;.salt/rollback.sls&lt;/code&gt;): if error, rollback procedure (by default sync from &lt;code&gt;archived&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;notify&lt;/strong&gt; OPTIONNAL/LEGACY (&lt;code&gt;.salt/notify.sls&lt;/code&gt;): after deployment, notify commands&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;All other sls found at &lt;strong&gt;toplevel&lt;/strong&gt; of the &lt;code&gt;.salt&lt;/code&gt; folder  which are not those ones are
executed in lexicographical order (alphanum) and&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;.salt/PILLAR.sample&lt;/code&gt; file contains default configuration variable for
your project and helps you to know what variable to override in your
custom pillar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;structure&#34;&gt;Structure&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This empty structure respects the aforementioned corpus reactor
layout, and is just an useless helloword project which should look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;srv&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;projects&lt;span class=&#34;o&#34;&gt;/&amp;lt;&lt;/span&gt;project_name&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; pillar&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;init.sls&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; override values &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; PILLAR.sample and define
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                   any other arbitrary pillar DATA.
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; data&lt;span class=&#34;o&#34;&gt;/:&lt;/span&gt; anything which is persisted to disk must live here
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;         from drupal sites&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;default&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;files&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; python eggs&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; buildouts parts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;         gems cache&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sqlite files&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; static files&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; docroots&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; etc.
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; project&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; a checkout or your project
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;git
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt;  codebase
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;salt
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; _modules &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; custom salt python exec modules
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; _states  &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; custom salt python states modules
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; _runners &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; custom salt python runners modules
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; _&lt;span class=&#34;kc&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; PILLAR.sample
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; task_foo.sls
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;_deploy.sls
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; If &lt;span class=&#34;s&#34;&gt;&amp;quot;remote_less&amp;quot;&lt;/span&gt; is False &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;default&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; git&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;project.git&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; bare git repos synchronnized &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bi&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;directional&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                   with project&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; used by git push style deployment
    &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; git&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;pillar.git&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  bare git repos synchronnized &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bi&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;directional&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                   with pillar&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; used by git push style deployment
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; arhives&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; past deployment archive folders
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;U&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;U&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;D1&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;U&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;U&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;D2&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;What you want to do is to replace the &lt;code&gt;project&lt;/code&gt; folder by your repo.&lt;br/&gt;
This one contains your code, as asual, plus the &lt;strong&gt;.salt&lt;/strong&gt; folder.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;WELL Understand&lt;/strong&gt; what is :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a &lt;a href=&#34;http://docs.saltstack.com/en/latest/topics/tutorials/starting_states.html#moving-beyond-a-single-sls&#34;&gt;salt SLS&lt;/a&gt;, it is the nerve of the war.&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;http://docs.saltstack.com/en/latest/topics/tutorials/pillar.html&#34;&gt;Pillar of salt&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;be ware&lt;/strong&gt;, on the production server the &lt;code&gt;.git/config&lt;/code&gt; is linked
with the makina-states machinery, &lt;strong&gt;NEVER MESS WITH ORIGIN AND MASTER BRANCH&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ensure to to have at least in your project git folder:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.salt/PILLAR.sample&lt;/code&gt;: configuration default values to use in
SLSes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.salt/archive.sls&lt;/code&gt;: archive step&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.salt/fixperms.sls&lt;/code&gt;: fixperm step&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.salt/rollback.sls&lt;/code&gt;: rollback step&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can then add as many SLSes as you want, and the ones directly in
&lt;strong&gt;.salt&lt;/strong&gt; will be executed in alphabetical order except the ones
beginning with &lt;strong&gt;task_&lt;/strong&gt; (task_foo.sls). Indeed the ones beginning
with &lt;strong&gt;task_&lt;/strong&gt; are different beasts and are intended to be either
included by your other slses to factor code out or to be executed
manually via the &lt;code&gt;mc_project.run_task&lt;/code&gt; command.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can and must have a look for inspiration on &lt;a href=&#34;/reference/templates/&#34;&gt;project templates&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;deployment-workflows&#34;&gt;Deployment workflows&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To build and deploy your project we provide two styles of doing style
that should be appropriate for most use cases.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/reference/projects/usage/#the-local-build-workflow&#34;&gt;A local build workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/projects/usage/#the-git-push-to-prod-deploy-workflow&#34;&gt;A distant git-push style workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-local-build-workflow&#34;&gt;The local build workflow&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;INITIALLY:

&lt;ul&gt;
&lt;li&gt;use &lt;code&gt;mc_project.init_project&lt;/code&gt; to create the structure to host your project&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;mc_project.report&lt;/code&gt; to verify things are in place&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Then

&lt;ul&gt;
&lt;li&gt;Edit/Place code in the pillar  folder: &lt;code&gt;/srv/projects/&amp;lt;project&amp;gt;/pillar&lt;/code&gt; to configure the project&lt;/li&gt;
&lt;li&gt;Edit/Place code in the project folder: &lt;code&gt;/srv/projects/&amp;lt;project&amp;gt;/project&lt;/code&gt; and manually launch the deploy&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wash, Rince, Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-git-push-to-prod-deploy-workflow&#34;&gt;The git push to prod deploy workflow&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;INITIALLY:

&lt;ul&gt;
&lt;li&gt;use &lt;code&gt;mc_project.init_project&lt;/code&gt; to create the structure to host your project&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;mc_project.report&lt;/code&gt; to verify things are in place&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Then

&lt;ul&gt;
&lt;li&gt;git push/or edit then push the pillar &lt;code&gt;host:/srv/projects/&amp;lt;project&amp;gt;/git/pillar.git&lt;/code&gt; to configure the project&lt;/li&gt;
&lt;li&gt;git push/or edit then push the code inside &lt;code&gt;host:/srv/projects/&amp;lt;project&amp;gt;/git/project.git&lt;/code&gt; which triggers the deploy&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wash, Rince, Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;deployment-stategy&#34;&gt;Deployment stategy&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To sum all that up, when beginning a project you will:

&lt;ul&gt;
&lt;li&gt;Initialize if not done a project structure with&lt;br/&gt;
&lt;code&gt;salt-call mc_project.init_project project&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;If you do not want git remotes, you can alternativly use&lt;br/&gt;
&lt;code&gt;salt-call mc_project.init_project project remote_less=true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;add a &lt;strong&gt;.salt&lt;/strong&gt; folder alongside your project codebase (in it&amp;rsquo;s
git repo).&lt;/li&gt;
&lt;li&gt;deploy it, either by:

&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;remote_less=True&lt;/strong&gt; mode or connected to the remote host to deploy onto:

&lt;ul&gt;
&lt;li&gt;edit/commit/push in &lt;code&gt;host:/srv/projects/&amp;lt;project&amp;gt;/pillar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;edit/commit/push/push to force in &lt;code&gt;host:/srv/projects/&amp;lt;project&amp;gt;/project&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Launch the &lt;code&gt;salt-call mc_project.deploy &amp;lt;project&amp;gt; only=install,fixperms,sync_modules&lt;/code&gt; dance&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;remote_less=False&lt;/strong&gt; mode:

&lt;ul&gt;
&lt;li&gt;git push your &lt;strong&gt;pillar&lt;/strong&gt; files to&lt;br/&gt;
&lt;code&gt;host:/srv/projects/&amp;lt;project&amp;gt;/git/pillar.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;git push your &lt;strong&gt;project code&lt;/strong&gt; to&lt;br/&gt;
&lt;code&gt;host:/srv/projects/&amp;lt;project&amp;gt;/git/project.git&lt;/code&gt;&lt;br/&gt;
(this last push triggers a deploy on the remote server)&lt;/li&gt;
&lt;li&gt;Your can use &lt;code&gt;--force&lt;/code&gt; as the deploy system only await the
&lt;code&gt;.salt&lt;/code&gt; folder. As long as the folder is present of the
working copy you are sending, the deploy system will be happy.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wash, Rince, Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;initialize-the-project-layout&#34;&gt;Initialize the project layout&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first thing to do when deploying a project is to create a &lt;strong&gt;nest&lt;/strong&gt; from it:&lt;br/&gt;
&lt;strong&gt;IF IT IS NOT ALREADY DONE&lt;/strong&gt; (just &lt;code&gt;ls /srv/projects&lt;/code&gt; to check):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call --local --retcode-passthrough -lall mc_project.init_project &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &amp;lt;project_name&amp;gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;remote_less&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;false/true&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Dont be long, and dont use &lt;code&gt;-&lt;/code&gt; &amp;amp; &lt;code&gt;_&lt;/code&gt; for the &lt;code&gt;project name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(opt) &lt;code&gt;remote_less&lt;/code&gt; instructs to deploy with or without the git
repos that allow users to use (or not) a &lt;strong&gt;git push to prod to deploy&lt;/strong&gt; workflow.

&lt;ul&gt;
&lt;li&gt;If &lt;code&gt;remote_less=true&lt;/code&gt;, the git repos wont be created, and you
will have to use only the the &lt;code&gt;local build workflow&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;remote_less=false&lt;/code&gt;, you can use both the &lt;code&gt;local build workflow&lt;/code&gt;
and the &lt;code&gt;git push to prod deploy workflow&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--local -lall&lt;/code&gt; instructs to run in masterless mode and extra verbosity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mc_project.init_project $project&lt;/code&gt; instructs to create the layout of
the name &lt;code&gt;$project&lt;/code&gt; project living into &lt;code&gt;/srv/projects/$project/project&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;running-deployment-procedure&#34;&gt;Running deployment procedure&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The following command is the nerve of the war:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/salt-call --local --retcode-passthrough -lall &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
     mc_project.deploy &lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;only&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;step2&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;,step1&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;only_steps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;step2&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;,step1&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;mc_project.deploy $project&lt;/code&gt; instructs to deploy the name &lt;code&gt;$project&lt;/code&gt;
project living into &lt;code&gt;/srv/projects/$project/project&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(opt) &lt;code&gt;only&lt;/code&gt; instructs to execute only the named global phases, and
when deploying directly onto a machine, you will certainly have to
use &lt;code&gt;only=install,fixperms,sync_modules&lt;/code&gt; to avoid the
archive/sync/rollback steps.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(opt) &lt;code&gt;only_steps&lt;/code&gt; instruct to execute only a specific or multiple
specific sls from the &lt;strong&gt;.salt&lt;/strong&gt; folder during the &lt;strong&gt;install&lt;/strong&gt; phase.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h2&gt;

&lt;h3 id=&#34;projects-reminder-tool&#34;&gt;Projects reminder tool&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: you can use it only if you provisionned your project
with attached remotes (the default)&lt;/li&gt;
&lt;li&gt;Remember use the remotes inside &lt;code&gt;/srv/projects/&amp;lt;project&amp;gt;/git&lt;/code&gt; and
not directly the working copies&lt;/li&gt;
&lt;li&gt;If you push on the pillar, it does not trigger a deploy&lt;/li&gt;
&lt;li&gt;If you push on the project, it triggers the full deploy procedure
including archive/sync/rollback.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To get useful push informations, on the remote server to deploy to,
just do&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;salt-call -lall mc_project.report
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;using-local-build-workflow&#34;&gt;Using local build workflow&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/install&#34;&gt;install makinastates&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialise the layout (only the first time)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;ssh root@remoteserver
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
salt-call mc_project.init_project &lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remote_less&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the pillar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /srv/projects/&lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt;/pillar
&lt;span class=&#34;nv&#34;&gt;$EDITOR&lt;/span&gt; init.sls
git commit -am up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add your project code&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /srv/projects/&lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt;/project
&lt;span class=&#34;c1&#34;&gt;# if not already done, add your project repo remote&lt;/span&gt;
git remote add o https://github.com/o/myproject.git
&lt;span class=&#34;c1&#34;&gt;# in any cases, update your code&lt;/span&gt;
git fetch --all
git reset --hard remotes/o/&amp;lt;the branch to deploy&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Run the deployment procedure, &lt;strong&gt;skipping archive/rollback&lt;/strong&gt; as you are connected and live editing&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;salt-call mc_project.deploy &lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;only&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;install,fixperms,sync_modules
&lt;span class=&#34;c1&#34;&gt;# or to deploy only a specific sls&lt;/span&gt;
salt-call &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    mc_project.deploy &lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;only&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;install,fixperms,sync_modules &lt;span class=&#34;nv&#34;&gt;only_steps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;000_foo.sls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When you want to commit your changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; vms/VM/srv/&lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt;/project
git push o HEAD:&amp;lt;master&amp;gt; &lt;span class=&#34;c1&#34;&gt;# replace master by the branch you want to push&lt;/span&gt;
                         &lt;span class=&#34;c1&#34;&gt;# back onto your forge&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;using-git-push-to-prod-deploy-workflow&#34;&gt;Using git push to prod deploy workflow&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/install&#34;&gt;install makinastates&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The following lines edit the pillar, and push it, this does not trigger a deploy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$WORKSPACE&lt;/span&gt;/myproject
git clone host:/srv/projects/project/git/pillar.git
&lt;span class=&#34;nv&#34;&gt;$EDITOR&lt;/span&gt; pillar/init.sls
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; pillar&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;git commit -am up&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;git push&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The following lines prepare a clone of your project codebase to be able
to be deployed onto production or staging servers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$WORKSPACE&lt;/span&gt;/myproject
git clone git@github.com/makinacorpus/myawsomeproject.git
git remote add prod /srv/projects/project/git/project.git
git fetch --all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To trigger a remote deployment, now you can do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--force&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; prod &amp;lt;mybranch&amp;gt;:master
eg: git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--force&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; prod &amp;lt;mybranch&amp;gt;:master
eg: git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--force&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; prod awsome_feature:master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;REMINDER&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DONT MESS WITH THE &lt;strong&gt;ORIGIN&lt;/strong&gt; REMOTE when your are connected
to your server in any of the &lt;code&gt;pillar&lt;/code&gt; or
&lt;code&gt;project&lt;/code&gt; directory..&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;&amp;lt;branchname&amp;gt;:master&lt;/code&gt; is really important as everything
in the production git repositories is wired on the &lt;code&gt;master&lt;/code&gt;
branch. You can push any branch you want from your original
repository, but in production, there is only &lt;strong&gt;master&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;configuration-pillar-variables&#34;&gt;Configuration pillar &amp;amp; variables&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We provide in &lt;strong&gt;mc_project&lt;/strong&gt; a powerfull mecanism to define configuration
variables used in your deployments that you can safely override in the
salt pillar files.&lt;br/&gt;
This means that you can set some default values for,
eg a domain name or a password, and input the production values that you
won&amp;rsquo;t commit along side your project codebase.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default values have to be stored inside the &lt;strong&gt;PILLAR.sample&lt;/strong&gt; file.&lt;/li&gt;
&lt;li&gt;Some of those variables, the one at the first level are mostly read
only and setup by makina-states itself.&lt;br/&gt;
The most important are:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: project name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;: the system user of your project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group&lt;/code&gt;: the system group of your project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: top level free variables mapping&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project_root&lt;/code&gt;: project root absolute path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data_root&lt;/code&gt;: persistent folder absolute path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_env&lt;/code&gt;: environment (staging/prod/dev)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pillar_root&lt;/code&gt;: absolute path to the pillar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fqdn&lt;/code&gt;: machine FQDN&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The only variables that you can edit at the first level are:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;remote_less&lt;/strong&gt;: is this project using git remotes for triggering deployments&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_env&lt;/strong&gt;: environement (valid values are staging/dev/prod)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The other variables, members of the &lt;strong&gt;data&lt;/strong&gt; sub entry are free for you to add/edit.&lt;/li&gt;
&lt;li&gt;Anything defined in the pillar &lt;code&gt;pillar/init.sls&lt;/code&gt; overloads what is in &lt;code&gt;project/.salt/PILLAR.sample&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can get and consult the result of the configuration assemblage like
this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;  bin/salt-call --retcode-passthrough mc_project.get_configuration &amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Remember that projects have a name, and the pillar key to configure
and overload your project configuration is based on this key.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EG: If your project is name &lt;strong&gt;foo&lt;/strong&gt;, you ll have to use
&lt;strong&gt;makina-projects.foo&lt;/strong&gt; in place of &lt;strong&gt;makina-projects.example&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;example&#34;&gt;Example:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;in &lt;code&gt;project/.salt/PILLAR.sample&lt;/code&gt;, you have:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-projects.projectname&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;start_cmd&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;myprog&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;in &lt;code&gt;pillar/init.sls&lt;/code&gt;, you have:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;makina-projects.foo&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
     &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;start_cmd&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;myprog2&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;In your states files, you can access the configuration via the magic &lt;code&gt;opts.ms_project&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;In your modules or file templates, you can access the configuration via &lt;code&gt;salt[&#39;mc_project.get_configuration&#39;(name)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A tip for loading the configuration from a template is doing something like that:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# project/.salt/00_deploy.sls&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;set cfg = opts.ms_project %&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;toto&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;file.managed&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;source://makina-projects/{{cfg.name}}/files/etc/foo&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/etc/foo&lt;/span&gt;
      &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;user {{cfg.user}}&lt;/span&gt;
      &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;group {{cfg.user}}&lt;/span&gt;
      &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;defaults&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p p-Indicator&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;cfg.name&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# project/.salt/files/etc/foo&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;set cfg = opts.ms_project %&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;My Super Template of {{cfg.name}} will run {{cfg.data.start_cmd}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;saltstack-integration&#34;&gt;SaltStack integration&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As you know makina-states embeds its own virtualenv and salt codebase.&lt;br/&gt;
In makina-states, we use by default:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;makina states itself: &lt;code&gt;/srv/makina-states&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a virtualenv inside &lt;code&gt;/srv/makina-states/venv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makina-corpus/salt.git&#34;&gt;salt from a fork&lt;/a&gt; installed inside &lt;code&gt;$makinastates/venv/src/salt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;As you see, the project layout seems not integration on those following
folders, but in fact, the project initialisation routines made symlinks
to integrate it which look like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$makinastates/salt/makina-projects/&amp;lt;project_name&amp;gt;&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/srv/projects/&amp;lt;project_name&amp;gt;/project§/.salt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$makinastates/pillar/pillar.d/makina-projects/&amp;lt;project_name&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/srv/projects/&amp;lt;project_name&amp;gt;/pillar&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The pillar is auto included in the &lt;strong&gt;pillar top&lt;/strong&gt; (&lt;code&gt;/srv/pîllar/top.sls&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The project salt files are not and &lt;strong&gt;must not&lt;/strong&gt; be included in the
salt &lt;strong&gt;top&lt;/strong&gt; for further highstates unless you know what you are doing.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can unlink your project from salt with:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;   bin/salt-call --retcode-passthrough mc_project.unlink &amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;You can link project from salt with:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;   bin/salt-call --retcode-passthrough mc_project.link &amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Controllers</title>
      <link>/reference/controllers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/controllers/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;controllers states purpose is mainly to check:

&lt;ul&gt;
&lt;li&gt;our bundled salt &amp;amp; ansible binaries are ready for operation&lt;/li&gt;
&lt;li&gt;the cloned code is up to date and clean&lt;/li&gt;
&lt;li&gt;If the user selected them:

&lt;ul&gt;
&lt;li&gt;crons are in place&lt;/li&gt;
&lt;li&gt;install links (&lt;code&gt;/usr/local/bin&lt;/code&gt;) are present&lt;/li&gt;
&lt;li&gt;RollingRealse updater crons are in place&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>LocalSettings</title>
      <link>/reference/localsettings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/localsettings/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LocalSettings states are related to the low level configuration of an environment&lt;br/&gt;
EG:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;locales&lt;/li&gt;
&lt;li&gt;network&lt;/li&gt;
&lt;li&gt;low level configuration](hardrive, etc)&lt;/li&gt;
&lt;li&gt;installing compilers &amp;amp; language interpreters&lt;/li&gt;
&lt;li&gt;configuring base tools &amp;amp; editors&lt;/li&gt;
&lt;li&gt;configuring SSH client&lt;/li&gt;
&lt;li&gt;distributing SSL certificates&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If any other preset than &lt;code&gt;scratch&lt;/code&gt; has been activated, &lt;br/&gt;
Many localsettings will be applied by default, see &lt;a href=&#34;https://github.com/makinacorpus/makina-states/blob/v2/mc_states/modules/mc_localsettings.py#L113&#34;&gt;mc_localsettings:registry&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;states&#34;&gt;States&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings&#34;&gt;localsettings States&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;non exhaustive shortcuts:&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/apparmor&#34;&gt;localsettings/apparmor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/nodejs&#34;&gt;localsettings/nodejs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/hostname&#34;&gt;localsettings/hostname&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/sudo&#34;&gt;localsettings/sudo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/autoupgrade&#34;&gt;localsettings/autoupgrade&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/npm&#34;&gt;localsettings/npm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/hosts&#34;&gt;localsettings/hosts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/sysctl&#34;&gt;localsettings/sysctl&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/casperjs&#34;&gt;localsettings/casperjs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/nscd&#34;&gt;localsettings/nscd&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/init.sls&#34;&gt;localsettings/init.sls&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/systemd&#34;&gt;localsettings/systemd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/check_raid&#34;&gt;localsettings/check_raid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/phantomjs&#34;&gt;localsettings/phantomjs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/insserv&#34;&gt;localsettings/insserv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/timezone&#34;&gt;localsettings/timezone&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/desktoptools&#34;&gt;localsettings/desktoptools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/pkgs&#34;&gt;localsettings/pkgs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/jdk&#34;&gt;localsettings/jdk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/updatedb&#34;&gt;localsettings/updatedb&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/dns&#34;&gt;localsettings/dns&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/python&#34;&gt;localsettings/python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/ldap&#34;&gt;localsettings/ldap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/users&#34;&gt;localsettings/users&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/editor&#34;&gt;localsettings/editor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/reconfigure-network&#34;&gt;localsettings/reconfigure-network&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/locales&#34;&gt;localsettings/locales&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/vim&#34;&gt;localsettings/vim&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/env&#34;&gt;localsettings/env&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/repository_dotdeb&#34;&gt;localsettings/repository_dotdeb&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/localrc&#34;&gt;localsettings/localrc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/mvn&#34;&gt;localsettings/mvn&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/etckeeper&#34;&gt;localsettings/etckeeper&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/rvm&#34;&gt;localsettings/rvm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/grub&#34;&gt;localsettings/grub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/ssl&#34;&gt;localsettings/ssl&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/git&#34;&gt;localsettings/git&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/screen&#34;&gt;localsettings/screen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/golang&#34;&gt;localsettings/golang&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/shell&#34;&gt;localsettings/shell&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/groups&#34;&gt;localsettings/groups&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/localsettings/sshkeys&#34;&gt;localsettings/sshkeys&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>/reference/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/services/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;Salt States dedicated to install services on the targeted environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;states&#34;&gt;States&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services&#34;&gt;services States&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;non exhaustive shortcuts:&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;backup&#34;&gt;backup&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/backup/bacula&#34;&gt;services/backup/bacula&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/backup/dbsmartbackup&#34;&gt;services/backup/dbsmartbackup&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/backup/burp&#34;&gt;services/backup/burp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/backup/rdiff-backup&#34;&gt;services/backup/rdiff-backup&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;base&#34;&gt;base&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/base/cron&#34;&gt;services/base/cron&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/base/ntp&#34;&gt;services/base/ntp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/base/dbus&#34;&gt;services/base/dbus&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/base/ssh&#34;&gt;services/base/ssh&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/cache/memcached&#34;&gt;services/cache/memcached&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;misc&#34;&gt;misc&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/collab/etherpad&#34;&gt;services/collab/etherpad&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/queue/rabbitmq&#34;&gt;services/queue/rabbitmq&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/sound/mumble&#34;&gt;services/sound/mumble&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/ftp/pureftpd&#34;&gt;services/ftp/pureftpd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;db&#34;&gt;db&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/db/mongodb&#34;&gt;services/db/mongodb&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/db/postgresql&#34;&gt;services/db/postgresql&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/db/mysql&#34;&gt;services/db/mysql&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/db/redis&#34;&gt;services/db/redis&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;dns&#34;&gt;dns&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/dns/dhcpd&#34;&gt;services/dns/dhcpd&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/dns/slapd&#34;&gt;services/dns/slapd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/dns/bind&#34;&gt;services/dns/bind&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;firewall&#34;&gt;firewall&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/firewall/shorewall&#34;&gt;services/firewall/shorewall&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/firewall/firewalld&#34;&gt;services/firewall/firewalld&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/firewall/firewall&#34;&gt;services/firewall/firewall&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/firewall/ms_iptables&#34;&gt;services/firewall/ms_iptables&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/firewall/fail2ban&#34;&gt;services/firewall/fail2ban&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/firewall/psad&#34;&gt;services/firewall/psad&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;gis&#34;&gt;gis&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/gis/postgis&#34;&gt;services/gis/postgis&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/gis/ubuntugis&#34;&gt;services/gis/ubuntugis&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;http&#34;&gt;http&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/http/nginx&#34;&gt;services/http/nginx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/http/apache_modfastcgi&#34;&gt;services/http/apache_modfastcgi&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/http/apache&#34;&gt;services/http/apache&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/http/apache_modfcgid&#34;&gt;services/http/apache_modfcgid&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/java/tomcat&#34;&gt;services/java/tomcat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/http/apache_modproxy&#34;&gt;services/http/apache_modproxy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;log&#34;&gt;log&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/log/rsyslog&#34;&gt;services/log/rsyslog&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/log/ulogd&#34;&gt;services/log/ulogd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;mail&#34;&gt;Mail&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/mail/dovecot&#34;&gt;services/mail/dovecot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/mail/postfix&#34;&gt;services/mail/postfix&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/client&#34;&gt;services/monitoring/client&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/icinga_web2&#34;&gt;services/monitoring/icinga_web2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/icinga&#34;&gt;services/monitoring/icinga&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/nagvis&#34;&gt;services/monitoring/nagvis&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/icinga2&#34;&gt;services/monitoring/icinga2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/pnp4nagios&#34;&gt;services/monitoring/pnp4nagios&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/icinga_web&#34;&gt;services/monitoring/icinga_web&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/monitoring/snmpd&#34;&gt;services/monitoring/snmpd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;php&#34;&gt;php&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/php/common&#34;&gt;services/php/common&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/php/modphp&#34;&gt;services/php/modphp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/php/phpfpm&#34;&gt;services/php/phpfpm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/php/phpfpm_with_apache&#34;&gt;services/php/phpfpm_with_apache&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/php/phpfpm_with_nginx&#34;&gt;services/php/phpfpm_with_nginx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;proxy&#34;&gt;Proxy&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/proxy/haproxy&#34;&gt;services/proxy/haproxy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/proxy/uwsgi&#34;&gt;services/proxy/uwsgi&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;virt&#34;&gt;virt&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/virt/docker&#34;&gt;services/virt/docker&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/virt/kvm&#34;&gt;services/virt/kvm&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/virt/lxc&#34;&gt;services/virt/lxc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/makinacorpus/makina-states/tree/v2/salt/makina-states/services/virt/virtualbox&#34;&gt;services/virt/virtualbox&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Services Managers</title>
      <link>/reference/servicesmanagers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/servicesmanagers/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;In makina-states services managers act on top of services to manage
their lifecycle (start/stop/restart/reload).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;systemd&#34;&gt;systemd&lt;/h2&gt;

&lt;h2 id=&#34;circus&#34;&gt;circus&lt;/h2&gt;

&lt;h2 id=&#34;supervisor&#34;&gt;supervisor&lt;/h2&gt;
</description>
    </item>
    
  </channel>
</rss>