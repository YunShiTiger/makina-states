<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installation on Makina States</title>
    <link>/tags/installation/index.xml</link>
    <description>Recent content in Installation on Makina States</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <atom:link href="/tags/installation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installation &amp; basic usage</title>
      <link>/install/</link>
      <pubDate>Wed, 15 Mar 2017 23:58:39 +0100</pubDate>
      
      <guid>/install/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;REMEMBER THAT FOR NOW YOU HAVE TO USE UBUNTU &amp;gt;= 14.04.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;download&#34;&gt;Download&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Get MakinaStates by cloning it from github&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone http://raw.github.com/makinacorpus/makina-states
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;boot-salt2-sh-the-makina-states-installer-manager&#34;&gt;boot-salt2.sh, the makina-states installer &amp;amp; manager&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;boot-salt2.sh&lt;/code&gt; will try to remember how you configured makina-states on
each run. It stores configs in &lt;code&gt;installdir/etc/makina-states&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Short overview:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Detailed overview:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh --long-help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you want to install  with default options (scratch)&lt;br/&gt;
&lt;code&gt;as root&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;optional-post-install-steps&#34;&gt;Optional post install steps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install the logrotate to rotate salt logs&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -C --install-logrotate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the cron that refresh makina-states code every since and then (15min)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -C --install-crons
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the salt &amp;amp; ansible binaries to /usr/local/bin&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -C --install-links
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;related-documents&#34;&gt;Related documents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;configure&#34;&gt;Configure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;databasesls&#34;&gt;database.sls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>LocalSettings</title>
      <link>/reference/localsettings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/localsettings/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nodetypes</title>
      <link>/reference/nodetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/nodetypes/</guid>
      <description>

&lt;h2 id=&#34;nodetypes&#34;&gt;Nodetypes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Your choice for &lt;code&gt;--nodetype&lt;/code&gt; is certainly one of:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scratch (default)&lt;/code&gt; only manage the ansible/salt installation and
configuration. You ll want to activate this mode if you want
to apply explicitly your states without relying of default
nodetypes configuration.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt; matches a baremetal server, and manage it
from end to end (base packages, network, locales, sshd, crond,
logrotate, etc, by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vm&lt;/code&gt; matches a VM (not baremetal), this is mostly like
&lt;strong&gt;server&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lxccontainer&lt;/code&gt; matches a VM (not baremetal), this is mostly
like &lt;strong&gt;server&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;laptop&lt;/code&gt; is like server but also install packages for
working on a developement machine (prebacking a laptop for
a dev)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dockercontainer&lt;/code&gt; matches a VM (not baremetal), this is
mostly like &lt;strong&gt;server&lt;/strong&gt;, but install &amp;amp; preconfigure circus to
manage daemons.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;devhost&lt;/code&gt; is suitable for a development machine enabling
states to act on that, by example installation of a test
local-loop mailer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrantvm&lt;/code&gt; is suitable to flag vagrant boxes and is a
subtype of devhost&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;switching-to-another-nodetype-on-an-already-installed-environment&#34;&gt;Switching to another nodetype on an already installed environment&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you installed the &lt;strong&gt;scratch&lt;/strong&gt; preset and want to switch to another preset:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;salt-call state.sls makina-states.nodetypes.&amp;lt;your_new_preset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you installed a preset and want to switch to another preset:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;edit &lt;code&gt;etc/makina-states/nodetype&lt;/code&gt; and put your new preset&lt;/li&gt;
&lt;li&gt;edit &lt;code&gt;etc/makina-states/nodetypes.yaml&lt;/code&gt; and set to false your old preset&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;salt-call state.sls makina-states.nodetypes.&amp;lt;your_new_preset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Order of operation</title>
      <link>/reference/sumup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/sumup/</guid>
      <description>

&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Makina-states was based at fist on &lt;code&gt;nodetypes presets&lt;/code&gt; that were preselected collections of makina-states states to apply to the system&lt;br/&gt;This is from where the &lt;code&gt;highstate&lt;/code&gt; will start to run.&lt;/li&gt;
&lt;li&gt;Recently we cutted off this behavior, and now you must apply them explicitly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;workflow&#34;&gt;Workflow&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;On nodetypes, we manage &lt;code&gt;controllers&lt;/code&gt;, aka the states which
configure salt &amp;amp; ansible for operation&lt;/li&gt;
&lt;li&gt;On those nodetypes, we may configure &lt;code&gt;localsettings&lt;/code&gt; like ssl, vim,
git, &amp;amp; basepackages or network configurations. If any other preset
than &lt;strong&gt;scratch&lt;/strong&gt; has been activated, many localsettings will be
applied by default
(see mc_states/modules/localsettings.py:registry)&lt;/li&gt;
&lt;li&gt;After all of the previous steps, we may configure &lt;code&gt;services&lt;/code&gt; like
sshd, crond, or databases. If we are on the &lt;strong&gt;scratch&lt;/strong&gt; mode, no
services are configured by default.&lt;/li&gt;
&lt;li&gt;Eventually, we may by able to install projects via &lt;code&gt;mc_project&lt;/code&gt;. &lt;br/&gt;
A project is just a classical code repository which has a &amp;ldquo;.salt&amp;rdquo;
and/or ansible playbooks/roles folder commited with enougth
information on how to deploy it.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/</guid>
      <description>

&lt;h2 id=&#34;briefing&#34;&gt;Briefing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Makinastates at a whole is a combination of ansible and saltstack
aiming at operating a cluster.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Makina-states do not use regular salt daemons to operate remotely but
an ansible bridge that copy the pillar and use salt-call locally
directly on the remote box via SSH&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ansible get the information from makinastates by getting the salt pillar
th rough a custom dynamic inventory.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;compatiblity&#34;&gt;Compatiblity&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;For now, use Ubuntu &amp;gt;= 14.04.&lt;/strong&gt;.&lt;br/&gt;
Makina-States can be ported to any
linux based OS, but we, here, use ubuntu server and this is the only
supported system for now. It can be used in any flavor, lxc, docker,
baremetal, kvm, etc.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>/reference/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/reference/services/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>/install/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/install/usage/</guid>
      <description>

&lt;h3 id=&#34;cli-exemples&#34;&gt;CLI Exemples&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Full fledged install&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -C --install-logrotate --install-crons --install-links
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To switch on a makina-states branch, like the &lt;strong&gt;v2&lt;/strong&gt; branch in
production:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -b v2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To sync makinastates code&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -C -S
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;running-makinastates-in-highstate-mode&#34;&gt;Running makinastates in highstate mode&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To install all enabled makinastates services after having configured
your pillar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;./boot-salt2.sh -n laptop&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;server&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;lxccontainer&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;vm -C &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    salt-call --retcode-passthrough state.sls makina-states.top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;upgrade&#34;&gt;Upgrade&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Upgrade will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run predefined &amp;amp; scheduled upgrade code&lt;/li&gt;
&lt;li&gt;Update makina-states repositories in /srv/salt &amp;amp; /srv/makina-states&lt;/li&gt;
&lt;li&gt;Update core repositories (like salt code source in /srv/makina-states/src/salt)&lt;/li&gt;
&lt;li&gt;Do the highstates (salt and masterone if any)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span&gt;&lt;/span&gt;boot-salt2.sh -C --S  &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    salt-call --retcode-passthrough state.sls makina-states.top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>