#
# Apache Fine Settings ------------------------------------------------
# Timeout: The number of seconds before receives and sends time out. default is 300 (5min),
#          1 or 2 min should be enough for any client request (so 60 or 120). beware of DOS!
# KeepAlive: bool: are KeepAlive requests allowed
# MaxKeepAliveRequests: maximum number of allowed KeepAlive requests (compare with MaxClients)
# KeepAliveTimeout: How many seconds should we keep Keepalive conn open (say something between 3 and 5 usually, be careful for DOS!)
# log_level: log level, allowed values are debug, info, notice, warn, error, crit, alert, emerg
# serveradmin_mail: default webmaster mail (used on error pages)
# mpm prefork
#   * StartServers: number of server processes to start
#   * MinSpareServers: minimum number of server processes which are kept spare
#   * MaxSpareServers: maximum number of server processes which are kept spare
#   * MaxRequestsPerChild: maximum number of requests a server process serves
#                          set 0 to disable process recylcing
#   * MaxClients : (alias MaxRequestWorkers): maximum number of server processes allowed to start
# mpm worker
#   * StartServers: initial number of server processes to start
#   * MinSpareThreads: minimum number of worker threads which are kept spare
#   * MaxSpareThreads: maximum number of worker threads which are kept spare
#   * ThreadLimit: ThreadsPerChild can be changed to this maximum value during a
#             graceful restart. ThreadLimit can only be changed by stopping
#             and starting Apache.
#   * ThreadsPerChild: constant number of worker threads in each server process
#   * MaxRequestsPerChild (alias MaxConnectionsPerChild): maximum number of requests a server process serves
#                          set 0 to disable process recylcing
#   * MaxClients : (alias MaxRequestWorkers): maximum number of threads
# mpm event
#   * all workers settings are used
#   * AsyncRequestWorkerFactor: max of concurrent conn is (AsyncRequestWorkerFactor + 1) * MaxRequestWorkers
{% set apacheStepOne = salt['grains.filter_by']({
    'dev': {
        'mpm': 'worker',
        'version': '2.2',
        'Timeout': 120,
        'KeepAlive': True,
        'MaxKeepAliveRequests': 5,
        'KeepAliveTimeout': 5,
        'log_level': 'warn',
        'serveradmin_mail': 'webmaster@localhost',
        'prefork': {
            'StartServers': 5,
            'MinSpareServers': 5,
            'MaxSpareServers': 5,
            'MaxClients': 20,
            'MaxRequestsPerChild': 300
        },
        'worker': {
            'StartServers': 2,
            'MinSpareThreads': 25,
            'MaxSpareThreads': 75,
            'ThreadLimit': 64,
            'ThreadsPerChild': 25,
            'MaxRequestsPerChild': 300,
            'MaxClients': 200
        },
        'event': {
            'AsyncRequestWorkerFactor' : "1.5"
        }
    },
    'prod': {
        'mpm': 'worker',
        'version': '2.2',
        'Timeout': 120,
        'KeepAlive': True,
        'MaxKeepAliveRequests': 100,
        'KeepAliveTimeout': 3,
        'log_level': 'warn',
        'serveradmin_mail': 'webmaster@localhost',
        'prefork': {
            'StartServers': 25,
            'MinSpareServers': 25,
            'MaxSpareServers': 25,
            'MaxClients': 150,
            'MaxRequestsPerChild': 3000
        },
        'worker': {
            'StartServers': 5,
            'MinSpareThreads': 50,
            'MaxSpareThreads': 100,
            'ThreadLimit': 100,
            'ThreadsPerChild': 50,
            'MaxRequestsPerChild': 3000,
            'MaxClients': 700
        },
        'event': {
            'AsyncRequestWorkerFactor' : "4"
        }
    }
  },
  grain='default_env',
  default= 'dev'
) %}
# Ubuntu 13.10 is now providing 2.4 with event by default
{% if grains['lsb_distrib_id']=="Ubuntu" and grains['lsb_distrib_release']>=13.10 %}
{%   do apacheStepOne.update({'mpm': 'event'}) %}
{%   do apacheStepOne.update({'version': '2.4'}) %}
{% endif %}
# Default OS-based paths settings added on apacheData
{% set apacheStepTwo = salt['grains.filter_by']({
    'Debian': {
        'package': 'apache2',
        'server': 'apache2',
        'service': 'apache2',
        'mod_wsgi': 'libapache2-mod-wsgi',
        'basedir': '/etc/apache2',
        'vhostdir': '/etc/apache2/sites-available',
        'confdir': '/etc/apache2/conf.d',
        'logdir': '/var/log/apache2',
        'wwwdir': '/srv'
        }
    },
    'RedHat': {
        'package': 'httpd',
        'server': 'httpd',
        'service': 'httpd',
        'mod_wsgi': 'mod_wsgi',
        'basedir': '/etc/httpd',
        'vhostdir': '/etc/httpd/conf.d',
        'confdir': '/etc/httpd/conf.d',
        'logdir': '/var/log/httpd',
        'wwwdir': '/var/www'
    },
  },
  grain='os_family',
  merge=apacheStepOne
) %}
# FINAL STEP: merge with data from pillar
{% set apacheData=salt['mc_utils.dictupdate'](apacheStepTwo , salt['pillar.get']('apache-settings',{})) %}
