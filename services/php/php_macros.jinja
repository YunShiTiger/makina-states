# PHP specific macros
#
# Import this macro file with context so that grains will be available in the macros
#
# * pool => create all states for a fpm php pool
#
#   - phpData: global apache configuration dictionnary, this cannot be given by context import, so please pass it to this macro
#
#   - site:  site name (ServerName)
#
#   - pool_name :  site nickname, used in states and log files and of course pool name, if not given it will be build from site name
#
#   TODO: document options

{% import "makina-states/_macros/services.jinja" as services with context %}
{{ salt['mc_macros.register']('services', 'php.common') }}
{% set localsettings = services.localsettings %}
{% set nodetypes = services.nodetypes %}
{% set locs = localsettings.locations %}
{% set phpData = services.phpSettings %}
{% macro pool(
              site = 'example.com',
              pool_name = None,
              custom_listen = None,
              use_shared_socket_path = False,
              project_root= None,
              relative_document_root= 'www',
              pool_template_source = None,
              nice_priority = -19,
              settings = None,
              open_basedir_additions= None,
              include_path_additions= None,
              session_cookie_domain= None
) -%}
{% set pool_name = pool_name or site.replace('.', '_').replace('-', '_') %}
{% set project_root = project_root or locs.projects_dir+'/' + site %}
{% set open_basedir_additions = open_basedir_additions or '' %}
{% set include_path_additions = include_path_additions or '' %}
{% if not pool_template_source %}
{% set pool_template_source = 'salt://makina-states/files'+phpData.etcdir+'/fpm/pool.d/pool.conf' %}
{% endif %}
{% if not session_cookie_domain %}
{% set session_cookie_domain = site %}
{% endif %}
{% if settings != None %}
{# Merge settings with phpData, @seephp_defaults for settings tree #}
{%   set phpData = salt['mc_utils.dictupdate'](phpData,settings) %}
{% endif %}

# Pool file
makina-php-pool-{{ pool_name }}:
  file.managed:
    - user: root
    - group: root
    - mode: 664
    - name: {{ phpData.etcdir }}/fpm/pool.d/{{ pool_name }}.conf
    - source: {{ pool_template_source }}
    - template: 'jinja'
    - defaults:
        var_tmp: "{{ locs.var_tmp_dir }}"
        var_log: "{{ locs.var_log_dir }}"
        pool_name: "{{ pool_name }}"
        project_root: "{{ project_root }}"
        relative_document_root: "{{ relative_document_root }}"
        site: "{{ site }}"
        chroot: {{ phpData.fpm.chroot }}
        use_socket: {{ phpData.fpm.use_socket }}
        socket_relative_path: "{{ phpData.fpm.socket_relative_path }}"
        socket_name: "{{ phpData.fpm.socket_name }}"
        use_shared_socket_path: {{ use_shared_socket_path|int(0) }}
        fpm_sockets_dir: "{{ phpData.fpm_sockets_dir }}"
        custom_listen: "{{ custom_listen }}"
        listen_backlog: {{ phpData.fpm.listen_backlog }}
        listen_allowed_clients: "{{ phpData.fpm.listen_allowed_clients }}"
        phpuser: "{{ phpData.fpm.phpuser }}"
        phpgroup: "{{ phpData.fpm.phpgroup }}"
        listen_mod: "{{ phpData.fpm.listen_mod }}"
        pool_nice_priority: {{ nice_priority }}
        pm_max_requests: {{ phpData.fpm.pm.max_requests }}
        pm_max_children: {{ phpData.fpm.pm.max_children }}
        pm_start_servers: {{ phpData.fpm.pm.start_servers }}
        pm_min_spare_servers: {{ phpData.fpm.pm.min_spare_servers }}
        pm_max_spare_servers: {{ phpData.fpm.pm.max_spare_servers }}
        statuspath: "{{ phpData.fpm.statuspath }}"
        ping: "{{ phpData.fpm.ping }}"
        pong: "{{ phpData.fpm.pong }}"
        request_terminate_timeout: "{{ phpData.fpm.request_terminate_timeout }}"
        request_slowlog_timeout: "{{ phpData.fpm.request_slowlog_timeout }}"
        session_auto_start: {{ phpData.session_auto_start|int(0) }}
        session_gc_maxlifetime: {{ phpData.session.gc_maxlifetime }}
        session_gc_probability: {{ phpData.session.gc_probability }}
        session_gc_divisor: {{ phpData.session.gc_divisor }}
        session_cookie_domain: {{ session_cookie_domain }}
        custom_sessions: {{ phpData.custom_sessions.enabled }}
        session_save_path: "{{ phpData.custom_sessions.save_path }}"
        session_save_handler: "{{ phpData.custom_sessions.save_handler }}"
        open_basedir: {{ phpData.open_basedir|int(1) }}
        open_basedir_additions: "{{ open_basedir_additions }}"
        include_path_additions: "{{ include_path_additions }}"
        file_uploads: {{ phpData.file_uploads|int(1) }}
        upload_max_filesize: "{{ phpData.upload_max_filesize }}"
        max_input_vars: {{ phpData.max_input_vars }}
        max_input_time: {{ phpData.max_input_time }}
        display_errors: {{ phpData.display_errors|int(0) }}
        error_reporting: {{ phpData.error_reporting }}
        memory_limit: "{{ phpData.memory_limit }}"
        max_execution_time: "{{ phpData.max_execution_time }}"
        allow_url_fopen: {{ phpData.allow_url_fopen|int(0) }}
        opcache_install: {{ phpData.modules.opcache.install }}
        opcache_enabled: {{ phpData.modules.opcache.enabled|int(1) }}
        opcache_enable_cli: {{ phpData.modules.opcache.enable_cli|int(1) }}
        opcache_memory_consumption: {{ phpData.modules.opcache.memory_consumption|int(64) }}
        opcache_interned_strings_buffer: {{ phpData.modules.opcache.interned_strings_buffer|int(4) }}
        opcache_max_accelerated_files: {{ phpData.modules.opcache.max_accelerated_files|int(2000) }}
        opcache_max_wasted_percentage: {{ phpData.modules.opcache.max_wasted_percentage|int(5) }}
        opcache_use_cwd: {{ phpData.modules.opcache.use_cwd|int(1) }}
        opcache_validate_timestamps: {{ phpData.modules.opcache.validate_timestamps|int(1) }}
        opcache_revalidate_freq: {{ phpData.modules.opcache.revalidate_freq|int(2) }}
        opcache_revalidate_path: {{ phpData.modules.opcache.revalidate_path|int(0) }}
        opcache_save_comments: {{ phpData.modules.opcache.save_comments|int(0) }}
        opcache_load_comments: {{ phpData.modules.opcache.load_comments|int(0) }}
        opcache_fast_shutdown: {{ phpData.modules.opcache.fast_shutdown|int(0) }}
        opcache_enable_file_override: {{ phpData.modules.opcache.enable_file_override|int(1) }}
        opcache_optimization_level: {{ phpData.modules.opcache.optimization_level }}
        opcache_blacklist_filename: {{ phpData.modules.opcache.blacklist_filename }}
        opcache_max_file_size: {{ phpData.modules.opcache.max_file_size|int(0) }}
        opcache_force_restart_timeout: {{ phpData.modules.opcache.force_restart_timeout|int(180) }}
        opcache_error_log: {{ phpData.modules.opcache.error_log }}
        opcache_log_verbosity_level: {{ phpData.modules.opcache.log_verbosity_level|int(1) }}
        apc_install: {{ phpData.modules.apc.install }}
        apc_enabled: {{ phpData.modules.apc.enabled|int(0) }}
        apc_enable_cli: {{ phpData.modules.apc.enable_cli|int(0) }}
        apc_rfc1867: {{ phpData.modules.apc.rfc1867|int(0) }}
        apc_include_once_override: {{ phpData.modules.apc.include_once_override|int(1) }}
        apc_canonicalize: {{ phpData.modules.apc.canonicalize|int(1) }}
        apc_stat: {{ phpData.modules.apc.stat|int(1) }}
        apc_stat_ctime: {{ phpData.modules.apc.stat_ctime|int(0) }}
        apc_num_files_hint: "{{ phpData.modules.apc.num_files_hint }}"
        apc_user_entries_hint: "{{ phpData.modules.apc.user_entries_hint }}"
        apc_ttl: "{{ phpData.modules.apc.ttl }}"
        apc_user_ttl: "{{ phpData.modules.apc.user_ttl }}"
        apc_gc_ttl: "{{ phpData.modules.apc.gc_ttl }}"
        apc_filters: "{{ phpData.modules.apc.filters }}"
        apc_max_file_size: "{{ phpData.modules.apc.max_file_size }}"
        apc_write_lock: {{ phpData.modules.apc.write_lock|int(1) }}
        apc_file_update_protection: "{{ phpData.modules.apc.file_update_protection }}"
        apc_lazy_functions: "{{ phpData.modules.apc.lazy_functions }}"
        apc_lazy_classes: "{{ phpData.modules.apc.lazy_classes }}"
        xdebug_install: {{ phpData.modules.xdebug.install|int(0) }}
        xdebug_enabled: {{ phpData.modules.xdebug.enabled|int(0) }}
        xdebug_collect_params: {{ phpData.modules.xdebug.collect_params|int(0) }}
        xdebug_profiler_enable: {{ phpData.modules.xdebug.profiler_enable|int(0) }}
        xdebug_profiler_enable_trigger: {{ phpData.modules.xdebug.profiler_enable_trigger|int(0) }}
        xdebug_profiler_output_name: "{{ phpData.modules.xdebug.profiler_output_name }}"
        mode: "production"
{% if grains['makina-states.nodetype.devhost'] %}
    - context:
        mode: "dev"
{% endif %}
    - require:
      - mc_proxy: makina-php-post-inst
    - watch_in:
      - mc_proxy: makina-php-pre-restart

# Ensure directories referenced in the pool exists
# and have the right users
makina-php-pool-{{ pool_name }}-webroot-directory:
  file.directory:
    - user: {{ phpData.fpm.phpuser }}
    - group: {{localsettings.group }}
    - mode: "2775"
    - makedirs: True
    - name: {{ project_root }}/{{ relative_document_root }}
    - require:
      - mc_proxy: makina-php-post-inst
    - require_in:
      - mc_proxy: makina-php-pre-restart

makina-php-pool-{{ pool_name }}-log-directory:
  file.directory:
    - user: {{ phpData.fpm.phpuser }}
    - group: {{localsettings.group }}
    - mode: "2775"
    - makedirs: True
    - name: {{ project_root }}/var/log
    - require:
      - mc_proxy: makina-php-post-inst
    - require_in:
      - mc_proxy: makina-php-pre-restart

{% if phpData.fpm.use_socket %}
makina-php-pool-{{ pool_name }}-socket-directory:
  file.directory:
    - user: {{ phpData.fpm.phpuser }}
    - group: {{localsettings.group }}
    - mode: "2775"
    - makedirs: True
    - name: {{ project_root }}/{{ phpData.fpm.socket_relative_path }}
    - require:
      - mc_proxy: makina-php-post-inst
    - require_in:
      - mc_proxy: makina-php-pre-restart
{% endif %}

{%- endmacro %}
